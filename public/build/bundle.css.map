{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Catch.svelte",
    "../../CookieBanner.svelte",
    "../../Balloon.svelte",
    "../../Brush.svelte",
    "../../Canvas.svelte",
    "../../CaseDensity.svelte",
    "../../Centroid.svelte",
    "../../CentroidTooltip.svelte",
    "../../Chart.svelte",
    "../../ChartDatapoint.svelte",
    "../../ChartSelector.svelte",
    "../../ChartWrapper.svelte",
    "../../ChartXAxis.svelte",
    "../../ChartYAxis.svelte",
    "../../Checkbox.svelte",
    "../../CheckboxPanel.svelte",
    "../../CheckboxSources.svelte",
    "../../Controls.svelte",
    "../../CopyTooltip.svelte",
    "../../Dropdown.svelte",
    "../../EventTooltip.svelte",
    "../../EventTooltipCross.svelte",
    "../../Events.svelte",
    "../../FossilCheckbox.svelte",
    "../../FossilDetails.svelte",
    "../../Fossildropdown.svelte",
    "../../Info.svelte",
    "../../Labels.svelte",
    "../../Legend.svelte",
    "../../LoadingInfo.svelte",
    "../../SearchText.svelte",
    "../../ShinyCircle.svelte",
    "../../Slider.svelte",
    "../../SourceLink.svelte",
    "../../Sources.svelte",
    "../../SpotTooltip.svelte",
    "../../Svg.svelte",
    "../../Switch.svelte",
    "../../Table.svelte",
    "../../Timeline.svelte",
    "../../TimelineSpot.svelte",
    "../../ToTop.svelte",
    "../../TopVisualContent.svelte",
    "../../Visualization.svelte"
  ],
  "sourcesContent": [
    "<script>\n  // the root component\n  import Catch from './Catch.svelte';\n  import Visualization from './components/Visualization.svelte';\n  import CookieBanner from './CookieBanner.svelte';\n\n\n  let width;\n\n\n  console.log('ðŸŽ‰ Fantastic! You are interested in our source code! Check it out: https://github.com/JeffRice/svelte-d3-prehistoric');\n\n\n  let bodyTag = document.getElementsByTagName(\"body\")\n\n\n  $: if (width < 600){\n    bodyTag[0].style.fontSize = \"14px\"\n  }\n  else if(width > 600){\n    bodyTag[0].style.fontSize = \"15px\"\n  }\n  else if(width > 980) {\n    test2[0].style.fontSize = \"17px\"\n  }\n  else if(width > 1260) {\n    test2[0].style.fontSize = \"18px\"\n}\n</script>\n\n<div class=\"app-wrapper\" bind:clientWidth={width}>\n <!-- <CookieBanner /> -->\n  {#if (width < 600)}\n  <div style=\"background: 'white';\">\n    <Catch content={'Please visit us on a larger screen to explore the visualization or try turning your device.'} />\n  </div>\n  {:else if (/MSIE|Trident/.test(window.navigator.userAgent))}\n    <Catch content={'Please visit us with a modern browser.'} />\n  {:else}\n  <Visualization />\n  {/if}\n\n</div>\n\n<style>\n  .app-wrapper {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  svg {\n    width: 960px;\n    height: 500px;\n  }\n  .border {\n    stroke: #444444;\n    fill: #cccccc;\n  }\n</style>\n",
    "<script>\n  // shown when the viz cannot be displayed\n  export let content = '';\n\n  function sendMail() {\n    const subject = encodeURIComponent('Dino Tracker');\n    const body = encodeURIComponent('I have seen this project on the web:\\nhttps://svelte-d3-prehistoric.vercel.app/');\n    window.location.href = `mailto:?subject=${subject}&body=${body}`;\n  }\n</script>\n\n<section class=\"content catch transparent-bg\">\n  <p>{content}</p>\n  <span class=\"pseudolink\" on:click={sendMail}>Send Email with Link</span>\n</section>\n<div class=\"placeholder-image\">\n  <img src=\"images/screens2.jpg\" alt=\"\" />\n</div>\n\n<style>\n  section.catch {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: none;\n    margin: 3rem 0;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  p, span {\n    width: 100%;\n    margin: 1rem 0;\n    font-family: var(--font-02);\n    font-size: 1.1rem;\n    color: var(--text-black);\n    text-align: center;\n  }\n\n  .placeholder-image {\n    width: 100%;\n    max-width: 1100px;\n    margin: 0 auto;\n    overflow: hidden;\n  }\n\n  img {\n    width: 100%;\n  }\n</style>\n",
    "<script>\n  // the cookie banner\n</script>\n\n<div id=\"cookies-eu-banner\">\n  <div class=\"content\">\n    <p>This page wants to use cookies.</p>\n    <button id=\"cookies-eu-accept\">Accept</button>\n    <button id=\"cookies-eu-reject\">Reject</button>\n    <a href=\"https://www.atlanticcouncil.org/privacy-policy/\" target=\"_blank\">Privacy</a>\n  </div>\n</div>\n\n<style>\n  #cookies-eu-banner {\n    display: none;\n    width: 100%;\n    min-height: 10%;\n    padding: 1rem;\n    color: var(--bg);\n    font-family: var(--font-02);\n    font-size: 1rem;\n    opacity: 0.95;\n    background-color: var(--prehistoricLightGreen);\n    position: fixed;\n    z-index: 1000000;\n    left: 0;\n    bottom: 0;\n  }\n\n  .content {\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n\n  .content > p, button {\n    margin-right: 1rem;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  #cookies-eu-banner button {\n    padding: 0.1rem 0.3rem;\n    font-size: 1rem;\n    font-weight: normal;\n    text-decoration: none;\n    border: 1px solid var(--bg);\n    border-radius: 2px;\n    outline: none;\n    position: relative;\n  }\n\n  button#cookies-eu-reject {\n    color: var(--bg);\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  button#cookies-eu-accept {\n    color: var(--prehistoricLightGreen);\n    background-color: var(--bg);\n  }\n\n  a {\n    display: block;\n    justify-self: flex-end;\n    font-size: 0.8rem;\n    color: var(--bg);\n  }\n</style>\n",
    "<script>\n  // the single balloon implementation\n  import { fade } from 'svelte/transition';\n  import { width } from '../stores/dimensions';\n  import { bloomDuration, growDuration, jitterFactor } from '../transitions/constants';\n  import { createEventDispatcher } from 'svelte';\n\n  import EventTooltip from './EventTooltip.svelte';\n\n  export let timePoint;\n  export let tweenedPos;\n  export let selected = false;\n\n\n  //making a minimum size \n  function setRadius (size) {\n   return Math.max(size, 5)\n  }\n\n\n  const dispatch = createEventDispatcher();\n\n  function handleMouseOver(e) {\n    if (e.buttons === 1) return;\n    dispatch('mouseover', {id: timePoint.id, tp: timePoint, e})\n  }\n\n  function handleMouseClick(e) {\n    dispatch('click', {id: timePoint.id, tp: timePoint, e})\n  }\n</script>\n\n<g class=\"balloon\"\n   class:selected\n   transform=\"translate({tweenedPos.x} {tweenedPos.fy})\"\n   on:mouseover|stopPropagation={handleMouseOver}\n   on:click|stopPropagation={handleMouseClick}\n   in:fade|local={{duration: bloomDuration, delay: growDuration + timePoint.id * jitterFactor}}\n   out:fade|local={{duration: bloomDuration, delay: timePoint.id * jitterFactor}}>\n  {#if (timePoint.recentlyAdded)}\n    <circle class=\"glow\"\n            cx=\"0\"\n            cy=\"0\"\n            r={timePoint.rSizeTot}\n            ></circle>\n   \n  {/if}\n  <circle class=\"balloon-main\"\n          cx=\"0\"\n          cy=\"0\"\n          r={setRadius(timePoint.rSizeTot * 1.15)}\n          filter=\"url(#{timePoint.image_location}_image)\"\n         ></circle>\n          \n  <!--<circle class=\"balloon-effect\"\n          class:size-pending={timePoint.sizePending}\n          cx=\"0\"\n          cy=\"0\"\n          r={timePoint.size * 1.2}></circle>-->\n</g>\n\n<style>\n  circle {\n    stroke: none;\n    opacity: 1;\n  }\n\n  .balloon {\n    cursor: pointer;\n  }\n\n  .glow {\n    stroke: var(--dfrlab-green);\n    stroke-width: 0.05rem;\n    fill: none;\n    animation: pulse 3s infinite ease-in-out;\n    animation-iteration-count: 20;\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  .balloon-effect {\n    fill: url('#green-radial-gradient');\n    opacity: 0;\n  }\n\n  .old-balloon-effect {\n    fill: url('#radial-gradient');\n  }\n\n  .balloon-effect.size-pending {\n    stroke: var(--usa-lightblue);\n    stroke-width: 0.18rem;\n    stroke-linecap: round;\n    stroke-dasharray: 3px 5px;\n  }\n\n  .selected .balloon-effect {\n    stroke: var(--prehistoricGreen);\n    stroke-width: 0.18rem;\n  }\n\n  .balloon-main {\n    opacity: 0.5;\n  }\n\n  @keyframes pulse {\n    0% {\n      transform: scale(0.5);\n      opacity: 0.9;\n    }\n    50% {\n      opacity: 0.8;\n    }\n    70% {\n      opacity: 0.09;\n    }\n    100% {\n      transform: scale(3);\n      opacity: 0;\n    }\n  }\n</style>\n",
    "<script>\n  // the time scale brush / zoom\n  import { onMount } from 'svelte';\n  import { timeScale } from '../stores/scales';\n  import { panelHeight, margin } from '../stores/dimensions';\n  import { brushable } from '../actions/brushable';\n  import { originalTimeDomain } from '../stores/filters';\n\n  let x = 0;\n  let fx = 0;\n  let fy = 0;\n  let width = 0;\n  let fWidth = 0;\n  let fHeight = 0;\n  let resetText;\n\n  let invisible = true;\n\n  function resetBrush() {\n    x = fx = $timeScale.range()[0];\n    fy = $margin.top;\n    width = fWidth = $timeScale.range()[1] - $timeScale.range()[0];\n    fHeight = ($panelHeight - $margin.top) * 1.05;\n  }\n\n  function resetTimeDomain() {\n    if ($originalTimeDomain) {\n      $timeScale.domain($originalTimeDomain);\n      $originalTimeDomain = null;\n      $timeScale = $timeScale;\n    }\n  }\n\n  function handleBrushStart(e) {\n    invisible = false;\n    width = 0;\n  }\n\n  function handleBrush(e) {\n    width = e.detail.width;\n    x = e.detail.x;\n  }\n\n  function handleBrushEnd(e) {\n    invisible = true;\n\n    const { x1, x2 } = e.detail;\n    if (!x1 || !x2 || isNaN(x1) || isNaN(x2) || Math.abs(x2 - x1) < 10) return;\n\n    if (!$originalTimeDomain) $originalTimeDomain = [...$timeScale.domain()];\n\n    $timeScale.domain([$timeScale.invert(x1), $timeScale.invert(x2)]);\n    $timeScale = $timeScale;\n    \n    resetBrush();\n  }\n\n  function handleKeyUp(e) {\n    if (e.keyCode === 27) {\n      resetTimeDomain();\n      return;\n    }\n\n    if ($originalTimeDomain !== null && (e.keyCode === 37 || e.keyCode == 39)) {\n      const prevDomain = [...$timeScale.domain()];\n      const diff = Math.floor(0.25 * (prevDomain[1] - prevDomain[0]));\n      if (e.keyCode === 37) {\n        $timeScale.domain([new Date(prevDomain[0] - diff), new Date(prevDomain[1] - diff)]);\n      } else if (e.keyCode === 39) {\n        $timeScale.domain([new Date(prevDomain[0] - - diff), new Date(prevDomain[1] - - diff)]);\n      }\n      $timeScale = $timeScale;\n    }\n  }\n\n  function handleResetButtonClick() {\n    resetTimeDomain();\n  }\n\n  onMount(() => {\n    resetBrush();\n  });\n</script>\n\n<svelte:window on:keyup={handleKeyUp}/>\n\n<g class=\"brush disable-select\">\n  <rect class=\"brush-area\"\n        class:invisible\n        x={x}\n        y={$panelHeight - 40}\n        width={width}\n        height={80}\n        rx=\"3\"\n        ry=\"3\"></rect>\n  <rect class=\"brush-catcher\"\n        x={fx}\n        y={$panelHeight - 40}\n        width={fWidth}\n        height={fHeight}\n        use:brushable\n        on:brushstart={handleBrushStart}\n        on:brush={handleBrush}\n        on:brushend={handleBrushEnd}></rect>\n</g>\n{#if ($originalTimeDomain)}\n  <g class=\"reset-brush\"\n     transform=\"translate({$timeScale.range()[0] - ($margin.left - 45)} {$panelHeight + 60})\"\n     on:click={handleResetButtonClick}>\n    <rect x=\"-3\"\n          y=\"-15\"\n          width={resetText ? resetText.getComputedTextLength() + 6 : 0}\n          height=\"20\"\n          rx=\"3\"\n          ry=\"3\"></rect>\n    <text class=\"disable-select\" bind:this={resetText}>Reset time scale</text>\n  </g>\n{/if}\n\n<style>\n  .brush-area {\n    visibility: visible;\n    fill: var(--prehistoricLightGreen);\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  .brush-catcher {\n    visibility: hidden;\n    fill: black;\n    pointer-events: all;\n    cursor: ew-resize;\n    height: 150px;\n  }\n\n  .invisible {\n    visibility: hidden;\n  }\n\n  .reset-brush {\n    cursor: pointer;\n  }\n\n  .reset-brush rect {\n    fill: var(--prehistoricDarkGreen);\n    stroke: var(--prehistoricDarkGreen);\n    stroke-width: 0.15rem;\n    transition: fill 200ms ease;\n  }\n\n  .reset-brush:hover rect {\n    fill: var(--bg);\n  }\n\n  .reset-brush text {\n    font-family: var(--font-02);\n    font-size: 0.9rem;\n    fill: var(--bg);\n    transition: fill 200ms ease;\n  }\n\n  .reset-brush:hover text {\n    fill: var(--prehistoricDarkGreen);\n  }\n</style>\n",
    "<script>\n  // the canvas component holding the world map\n  import { width, height, panelHeight, mapHeight } from '../stores/dimensions';\n  import { bg, usaRed, usaLightRed, usaLightLightRed, preGreen, preBlue, prePurple } from '../utils/colors';\n  import { countries, pangeaRegions, projection, geoPath } from '../stores/map';\n  import { scaleFactor } from '../stores/scales';\n  import { timeScale } from '../stores/scales';\n  import {select, geoGraticule, geoNaturalEarth1, geoMercator, geoPath as d3geoPath, scaleLinear} from \"d3\"\n  import { onMount, afterUpdate } from \"svelte\";\n  import { feature } from \"topojson\";\n  import loadJurassicFossils from '../utils/loadJurassicFossils';\n  import loadTriassicFossils from '../utils/loadTriassicFossils';\n  import loadCretaceousFossils from '../utils/loadCretaceousFossils';\n  import { fossilDatapoints, switchValueStore } from '../stores/elements';\n\n  let canvas;\n  let worldFeature;\n  let worldjson;\n  let graticule;\n  let triassicFossilSpots;\n  let jurassicFossilSpots;\n  let cretaceousFossilSpots;\n  const worldDataPath = 'countries-50m.json';\n\n  onMount(async function() {\n\n    const worldResponse = await fetch(worldDataPath);\n    worldjson = await worldResponse.json();\n  //  console.log('worldjson: ', worldjson)\n    worldFeature = feature(worldjson, worldjson.objects.countries);\n  //  console.log('worldFeature: ', worldFeature)\n\n\n  jurassicFossilSpots = await loadJurassicFossils();\n  triassicFossilSpots = await loadTriassicFossils();\n  cretaceousFossilSpots = await loadCretaceousFossils();  \n\n\n  $fossilDatapoints.jurassic = jurassicFossilSpots;\n  $fossilDatapoints.originaljurassic = jurassicFossilSpots;\n  $fossilDatapoints.triassic = triassicFossilSpots;\n  $fossilDatapoints.originaltriassic = triassicFossilSpots;\n  $fossilDatapoints.cretaceous = cretaceousFossilSpots;\n  $fossilDatapoints.originalcretaceous = cretaceousFossilSpots;\n\n\n  // starting without fossil spots on smaller screens to help mobile users\n  if($width < 1000){\n\n$fossilDatapoints['cretaceous'] = [];\n$fossilDatapoints['triassic'] = [];\n$fossilDatapoints['jurassic'] = [];\n\n    }\n\n  });\n\n//to update the fossil locations on resize\n  $: if($width || $height) {\n    reDraw();\n  }\n/*\nanother way to redraw on updates\n  afterUpdate(() => {\n\t\t// ...the DOM is now in sync with the data\n    reDraw(); \n\t});\n*/\n\n\n  //main reactive loop\n  $: if (canvas && $countries && pangeaRegions && worldjson && jurassicFossilSpots && triassicFossilSpots && cretaceousFossilSpots && fossilDatapoints && $switchValueStore) {\n\n\n    let geoNaturalEarth1projection = geoNaturalEarth1()\n    .scale(225 + ($width / 25))\n  // .scale($width / 1.3 / Math.PI)\n  //  .rotate([10, -15])\n    .translate([$width / 2, ($mapHeight / 2)])\n\n    let testProjection = geoMercator()\n    .scale($projection.scale())\n    .translate($projection.translate())\n\n\n    let geoGenerator = d3geoPath()\n  .projection($projection)\n  .context(ctx);\n\n    let projectionCopy = $projection;\n    \n  //initial canvas setup\n    canvas.width = $scaleFactor * $width;\n    canvas.height = $scaleFactor * $height;\n    canvas.style.width = `${$width}px`;\n    canvas.style.height = `${$height}px`;\n\n    const ctx = canvas.getContext('2d', { alpha: false });\n    ctx.scale($scaleFactor, $scaleFactor);\n    ctx.translate(0, $panelHeight);\n\n    ctx.strokeStyle = preGreen;\n    ctx.fillStyle = bg;\n    ctx.fillRect(0, -$panelHeight, $width, $height);\n   \n    $geoPath.context(ctx);\n\n   // console.log(projection)\n\n\n\n        // begin fossil adding code\n        let container = select(\"#container\")\n    \t.style(\"width\", width + \"px\")\n    \t.style(\"height\", height + \"px\");\n\t\t\t\t\nlet base = select('#map');\n\n\nlet locations = select('#points');\n\nlet jurassicPaint= scaleLinear() .domain([140, 206]).range([\"#a4e3ef\",\"#2f9eb3\"])\n\nfunction createMap(dataset) {\n\n\n  var dataBinding = locations.selectAll(\"points.arc\")\n\n    .data(dataset)\n  \n  \t\t.enter()\n      .append(\"points\")\n      .classed(\"arc\", true)\n      .attr(\"x\", function(d) {return testProjection([d.y,d.x])[0]})\n      .attr(\"y\", function(d) {return testProjection([d.y,d.x])[1]})\n      .attr(\"radius\", 4)\n      .attr(\"fillStyle\", function(d) {return jurassicPaint(d.maxAge)})\n\n   drawCanvas();\n\n     \n\n}\n\nlet triassicPaint= scaleLinear() .domain([199, 247]).range([\"#f2caf7\",\"#6c4870\"])\n\nfunction createTriassicMap(dataset) {\n\n\n\nlocations.selectAll(\"points.arc\")\n\n  .data(dataset)\n    .enter()\n    .append(\"points\")\n    .classed(\"arc\", true)\n    .attr(\"x\", function(d) {return testProjection([d.y,d.x])[0]})\n    .attr(\"y\", function(d) {return testProjection([d.y,d.x])[1]})\n    .attr(\"radius\", 4)\n    .attr(\"fillStyle\", function(d) {return triassicPaint(d.maxAge)})\n   drawCanvas();\n\n\n\n\n}\n\nlet cretaceousPaint= scaleLinear() .domain([60, 150]).range([\"#aad5a9\",\"#486848\"])\n\n\nfunction createCretaceousMap(dataset) {\n\n\nlocations.selectAll(\"points.arc\")\n\n.data(dataset)\n\n  .enter()\n  .append(\"points\")\n  .classed(\"arc\", true)\n  .attr(\"x\", function(d) {return testProjection([d.y,d.x])[0]})\n  .attr(\"y\", function(d) {return testProjection([d.y,d.x])[1]})\n  .attr(\"radius\", 4)\n  .attr(\"fillStyle\", function(d) {return cretaceousPaint(d.maxAge)})\n\n  drawCanvas();\n}\n\nfunction drawCanvas() {\n\n\tvar elements = locations.selectAll(\"points.arc\");\n  \telements.each(function(d, i) {\n    var node = select(this);\n\t\t\n    ctx.beginPath();\n\t\tctx.arc(node.attr(\"x\"), node.attr(\"y\"), node.attr(\"radius\"), 0, 2 * Math.PI);\n\t\tctx.fillStyle = node.attr(\"fillStyle\");\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#fff';\n      ctx.stroke();\n    ctx.closePath();\n\t})\n\n}\n\nfunction drawDonut() {\n\nvar elements = locations.selectAll(\"points.arc\");\n  elements.each(function(d, i) {\n  var node = select(this);\n  \n  ctx.beginPath();\n  ctx.arc(node.attr(\"x\"), node.attr(\"y\"), node.attr(\"radius\"), 0, 2 * Math.PI);\n  ctx.fillStyle = node.attr(\"fillStyle\");\n  ctx.lineWidth = 0.5;\n    ctx.strokeStyle = node.attr(\"fillStyle\");\n    ctx.stroke();\n  ctx.closePath();\n})\n\n}\n\n\n\ncreateTriassicMap($fossilDatapoints.triassic);\n    \ncreateMap($fossilDatapoints.jurassic);\n  \ncreateCretaceousMap($fossilDatapoints.cretaceous);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction makeGraticules() {\n\n  let geoGenerator = d3geoPath()\n  .projection(geoNaturalEarth1projection)\n  .context(ctx);\n\n\n            // Create and configure the graticule generator (one line every 20 degrees)\n        graticule = geoGraticule()\n            ctx.beginPath();\n      //      ctx.globalAlpha = 0.45;\n            ctx.strokeStyle = '#ccc';\n            geoGenerator(graticule());\n            geoGenerator(graticule.outline());\n            ctx.stroke();\n\n            ctx.lineWidth = 2;\n            let outline = graticule.outline();\n            ctx.beginPath();\n            ctx.strokeStyle = '#000';\n            geoGenerator(outline);\n            ctx.stroke();\n\n}\n\n         makeGraticules();\n\n         \n\nfunction worldMap() {\n      // Current World Map\n      ctx.save();\n    ctx.strokeStyle = '#000';\n    ctx.lineWidth = 1;\n    ctx.fillStyle = bg;\n    ctx.beginPath();\n    ctx.globalAlpha = 0.35;\n  //  worldFeature.features = worldFeature.features.filter((d) => d.properties.name !== 'Antarctica');\n    worldFeature.features.forEach($geoPath);\n    \n    ctx.stroke();\n    ctx.fill();\n    ctx.restore();\n\n}\n\n \n\n    worldMap()\n\n    function pangeaMap() {\n          //Pangea map\n    ctx.strokeStyle = preGreen;\n    ctx.globalAlpha = 0.15;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    $pangeaRegions.forEach($geoPath);\n    ctx.fillStyle = preGreen;\n    ctx.fill();\n    ctx.strokeStyle = '#000';\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n\n    \n    setTimeout(function(){\n      \n\n        var fadeEffect = setInterval(function () {\n\n          if (ctx.globalAlpha < 0.225){\n            ctx.globalAlpha += 0.015;\n          ctx.beginPath();\n    $pangeaRegions.forEach($geoPath);\n    ctx.fillStyle = preGreen;\n    ctx.fill();\n    ctx.strokeStyle = '#000';\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n          }\n          else {\n            clearInterval(fadeEffect);\n        }\n\n        }, 80);\n    },1);\n\n\n    }\n\n    \n\n    if($switchValueStore === 'on'){\n      pangeaMap()\n    }\n    if($switchValueStore === 'off'){\n    }\n\n\n      \n\n\n\nfunction createLegend(){\n\n  ctx.fillStyle = bg;\n  ctx.fillRect($width - 220, $mapHeight - 230, 300, 230);\n  ctx.strokeStyle = '#000';\n  ctx.strokeRect($width - 220, $mapHeight - 230, 300, 230);\n\n\n  ctx.font = 'bold 16px Quicksand';\n  ctx.fillStyle = \"#000\";\n  ctx.fillText('Fossil Color Scale', $width - 200, $mapHeight - 211);\n\n  ctx.beginPath();\n  ctx.moveTo($width - 200, $mapHeight - 205);\n  ctx.lineTo($width - 66, $mapHeight - 205);\n  ctx.stroke();\n\n\n  ctx.font = '16px Quicksand';\n  ctx.fillStyle = \"#000\";\n  ctx.fillText('Cretaceous', $width - 200, $mapHeight - 179);\n // ctx.fillStyle = preBlue;\n\n\n  //gradient\n  const gradientCretaceous = ctx.createLinearGradient($width - 200, 0, $width - 25, 0);\n  gradientCretaceous.addColorStop(0, \"#aad5a9\");\n  gradientCretaceous.addColorStop(1, \"#486848\");\n  ctx.fillStyle = gradientCretaceous;\n  ctx.fillRect($width - 200, $mapHeight - 162, 175, 16);\n\n  //years range\n  ctx.fillStyle = '#000';\n  ctx.font = '12px Quicksand';\n  ctx.fillText('65 mya', $width - 200, $mapHeight - 165);\n  ctx.fillText('145 mya', $width - 72, $mapHeight - 165);\n\n\n\n   //time era\n  ctx.font = '16px Quicksand';\n  ctx.fillText('Jurassic', $width - 200, $mapHeight - 110);\n//  ctx.fillStyle = prePurple;\n\n\n\n  //gradient\n  const gradientJurassic = ctx.createLinearGradient($width - 200, 0, $width - 25, 0);\n  gradientJurassic.addColorStop(0, \"#a4e3ef\");\n  gradientJurassic.addColorStop(1, \"#2f9eb3\");\n  ctx.fillStyle = gradientJurassic;\n  ctx.fillRect($width - 200, $mapHeight - 93, 175, 16);\n\n  //years range\n  ctx.fillStyle = '#000';\n  ctx.font = '12px Quicksand';\n  ctx.fillText('145 mya', $width - 200, $mapHeight - 96);\n  ctx.fillText('201 mya', $width - 72, $mapHeight - 96);\n\n\n  //time era\n  ctx.fillStyle = '#000';\n  ctx.font = '16px Quicksand';\n  ctx.fillText('Triassic', $width - 200, $mapHeight - 41);\n\n  //gradient\n  const gradient = ctx.createLinearGradient($width - 200, 0, $width - 25, 0);\n  gradient.addColorStop(0, \"#f2caf7\");\n  gradient.addColorStop(1, \"#6c4870\");\n  ctx.fillStyle = gradient;\n  ctx.fillRect($width - 200, $mapHeight - 25, 175, 16);\n\n  //years range\n  ctx.fillStyle = '#000';\n  ctx.font = '12px Quicksand';\n  ctx.fillText('201 mya', $width - 200, $mapHeight - 28);\n  ctx.fillText('251 mya', $width - 72, $mapHeight - 28);\n\n}   \n    if($width > 1000){\n      createLegend()\n    }\n\n\n}\n//end main reactive loop\n\n\nfunction reDraw() {\n  let locations = select('#points');\n  var elements = locations.selectAll(\"points.arc\");\n  elements.each(function(d, i) {\n  var node = select(this);\n  this.remove();\n})\n}\n\n\n</script>\n\n\n\n<div class=\"layer\"></div>\n<div id=\"map\">\n   <canvas bind:this={canvas}>\n      <div id=\"points\"></div>\n  </canvas>\n</div>\n<style>\n\ncanvas {\n    position: absolute;\n    z-index: 0;\n  }\n\t\t\t\t\n</style>\n",
    "<script>\n  // the case density plot for the country tooltips\n  import {\n    scaleLinear,\n    extent,\n    line as d3line,\n    curveBasis } from 'd3';\n  import { kernelDensityEstimator, kernelEpanechnikov } from '../utils/misc';\n\n  export let width = 0;\n  export let height = 0;\n  export let dates = [];\n  export let minDate = 0;\n  export let maxDate = 350;\n\n  const margin = {\n    top: 10,\n    right: 6,\n    bottom: 10,\n    left: 6\n  };\n\n  const line = d3line().curve(curveBasis);\n\n  $: ms = dates.map((d) => d - minDate);\n\n  $: xScale = scaleLinear()\n      .domain([0, maxDate - minDate])\n      .range([margin.left, width - margin.right]);\n\n  $: kde = kernelDensityEstimator(kernelEpanechnikov(Math.max(...ms) / ms.length), xScale.ticks(ms.length))\n  $: density = kde(ms);\n\n  $: yScale = scaleLinear()\n      .domain(extent(density.map((d) => d[1])))\n      .range([height - margin.bottom, margin.top]);\n\n  $: data = density.map((d) => [xScale(d[0]), yScale(d[1])]);\n</script>\n\n<svg viewBox=\"0 0 {width} {height}\"\n     width={width}\n     height={height}>\n  <defs>\n    <linearGradient id=\"density-gradient\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n      <stop offset=\"0\" style=\"stop-color: var(--usa-lightlightblue);\" />\n      <stop offset=\"0.8\" style=\"stop-color: var(--usa-lightblue);\" />\n      <stop offset=\"1\" style=\"stop-color: var(--usa-lightblue);\" />\n    </linearGradient>\n  </defs>\n  <g class=\"line\">\n    <path d={line(data)}></path>\n    <circle cx={data[data.length - 1][0]} cy={data[data.length - 1][1]} r=\"5\" />\n  </g>\n</svg>\n\n<style>\n  .line path {\n    stroke: url(#density-gradient);\n    stroke-opacity: 1;\n    stroke-width: 0.15rem;\n    stroke-linecap: round;\n    fill: none;\n  }\n  circle {\n    stroke: none;\n    fill: var(--usa-blue);\n  }\n</style>\n",
    "<script>\n  // single implementation of a country centroid on the map\n  import { centroidScale } from '../stores/scales';\n  import { bloomDuration, growDuration, jitterFactor } from '../transitions/constants';\n  import { haveOverlap } from '../utils/misc';\n  import { createEventDispatcher } from 'svelte';\n  import { fade } from 'svelte/transition';  \n  import { createTweenedPos } from '../transitions/tween';\n  \n  export let centroid;\n  export let country;\n  export let selected = false;\n\n\n  const tweenedPos = createTweenedPos();\n\n$: $tweenedPos = {x: centroid[0].xCountry, fy: centroid[0].yCountry};\n\n  const dispatch = createEventDispatcher();\n  // console.log('centroid: ', centroid)\n  // console.log('tweenedPos: ',   centroid[0].xCountry)\n\n  function topMargin (point){\n\n  if (centroid[0].disNation === 'Eurasia'){\n    point = point + 100\n  }\nreturn point\n  }\n\n\n\n</script>\n\n<g class=\"centroid\"\n   class:selected\n   on:click|stopPropagation={(e) => dispatch('click', {id: country, c: centroid, e})}\n   on:mouseover|stopPropagation={(e) => dispatch('mouseover', {id: country, c: centroid, e})}>\n\n\n         <circle class=\"centroid-fg\"\n          style=\"transition: stroke-opacity {growDuration}ms ease;\"\n          cx={$tweenedPos.x}\n          cy={topMargin($tweenedPos.fy)}\n          r={$centroidScale(10)}></circle>\n\n\n   <!-- Centroid Label -->\n  <g class=\"centroid-name-label\" transform=\"translate({centroid[0].xCountry - (country.length * 4)} {topMargin(centroid[0].yCountry) + 30})\">\n     <text style=\"transition: opacity {growDuration}ms ease;\">{country}</text>\n  </g>\n \n  <!-- Centroid Circle with count -->\n  {#if (centroid.length > 0)}\n      <g class=\"centroid-label\" transform=\"translate({centroid[0].xCountry} {topMargin(centroid[0].yCountry) + 5})\">\n      <text style=\"transition: opacity {growDuration}ms ease;\">{centroid.filter((c) => c.show).length}</text>\n    </g>\n  {/if}\n</g>\n\n<style>\n  .centroid {\n    cursor: pointer;\n  }\n\n\n  .centroid-name-label{\n    fill: var(--usa-blue);\n    font-family: var(--font-02);\n    font-weight: 500;\n  }\n\n  .centroid-fg {\n    stroke: var(--usa-blue);\n    stroke-width: 0.18rem;\n    stroke-opacity: 0.2;\n    fill: var(--bg);\n  }\n\n  .selected .centroid-fg {\n    stroke-opacity: 1;\n  }\n\n  .centroid-label text {\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-anchor: middle;\n    fill: var(--usa-blue);\n    opacity: 0.2;\n    pointer-events: none;\n  }\n\n  .selected .centroid-label text {\n    opacity: 1;\n  }\n</style>\n",
    "<script>\n  // tooltip for the country centroids\n  import { fade } from 'svelte/transition';\n  import { width } from '../stores/dimensions';\n  import { tooltip } from '../stores/centroidSelections';\n  import { timeScale } from '../stores/scales';\n  import { sortConsistently } from '../utils/misc';\n  import { originalTimeDomain } from '../stores/filters';\n  import {\n    disinformantNationFilter,\n    dietFilter,\n    timeperiodFilter,\n    selectAllFilters\n  } from '../stores/filters';\n  import { timeFormat, group, timeParse } from 'd3';\n  import { uniq } from 'lodash';\n\n\n  import CaseDensity from './CaseDensity.svelte';\n\n  const offset = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  };\n  const contentOffset = 100;\n\n  let tWidth = 0;\n  let tHeight = 0;\n  let side;\n  let left, top, contentTop;\n\n  let timeperiods, diets;\n\n  $: if ($tooltip) {\n    side = $width - $tooltip.c[0].xCountry < $width / 2 ? 'left' : 'right';\n    \n    top = $tooltip.c[0].yCountry - offset.top;\n\n    console.log($tooltip.c[0].disNation)\n\n\n    contentTop = contentOffset - $tooltip.e.pageY + window.pageYOffset;\n    if (Math.abs(contentTop) > tHeight - offset.bottom) {\n      contentTop = -tHeight - offset.bottom;\n    }\n    \n    if (side === 'left') {\n      left = $tooltip.c[0].xCountry - tWidth - 2 * offset.left;\n    } else if (side === 'right') {   \n      left = $tooltip.c[0].xCountry - offset.left;\n    }\n\n    if ($tooltip.c[0].disNation === 'Eurasia'){\n      contentTop += 100;\n    }\n  }\n\n  function handleLiClick(type, item) {\n    selectAllFilters();\n    disinformantNationFilter.selectOne($tooltip.c[0].disNation);\n    switch (type) {\n      case 'periodEra': timeperiodFilter.selectOne(item); break;\n      case 'diet': dietFilter.selectOne(item); break;\n    }\n  }\n\n  function generateItemsArray(data, name) {\n    return [...group(data.map((d) => d[name]).flat(), (d) => d)]\n              .map((d, i) => ({id: i, name: d[0], count: d[1].length}))\n              .sort((a, b) => sortConsistently(a, b, 'count', 'id'));\n  }\n\n  $: if ($tooltip) {\n    timeperiods = generateItemsArray($tooltip.c, 'periodEra');\n    diets = generateItemsArray($tooltip.c, 'diet');\n  }\n\n\n\n</script>\n\n{#if ($tooltip)}\n  <div class=\"tooltip\"\n       style=\"left: {left}px; top: {top}px;\"\n       bind:clientWidth={tWidth}\n       on:click|stopPropagation\n       on:mouseover|stopPropagation\n       transition:fade={{duration: 200}}>\n    <div class=\"content\"\n         bind:clientHeight={tHeight}\n         style=\"top: {contentTop}px;\">\n      <div class=\"scroll-wrapper\">\n        <div class=\"title\">\n          <h2>{uniq($tooltip.c.map((d) => d.disNation)).join(' | ')}</h2>\n          <p class=\"small no-break\">{$tooltip.c.length} Species</p>\n        </div>\n        {#if ($tooltip.c.length > 1 && !$originalTimeDomain)}\n          <div class=\"case-density-vs-time\">\n            <h3>Species over time</h3>\n            <CaseDensity width={Math.max(0, tWidth - offset.left - offset.right - 2 * 16)} \n                         height={50}\n                         dates={$tooltip.c.map((d) => d.testDate)}\n                         minDate={0}\n                         maxDate={350} />\n            <h6>(Not all prehistoric species, only those represented in the visualization)</h6>\n          </div>\n        {/if}\n        <div class=\"timeperiods\">\n          <h3>Time periods</h3>\n          <ul>\n            {#each timeperiods as timeperiod (timeperiod.id)}\n              <li on:click|stopPropagation={() => handleLiClick('periodEra', timeperiod.name)}>\n                {timeperiod.name}\n                <span class=\"very-small\">({timeperiod.count})</span>\n              </li>\n            {/each}\n          </ul>\n        </div>\n        <div class=\"diets\">\n          <h3>Diets</h3>\n          <ul>\n            {#each diets as diet (diet.id)}\n              <li on:click|stopPropagation={() => handleLiClick('diet', diet.name)}>\n                {diet.name}\n                <span class=\"very-small\">({diet.count})</span>\n              </li>\n            {/each}\n          </ul>\n        </div>\n\n      </div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .tooltip {\n    width: 21%;\n    min-width: 100px;\n    font-family: var(--font-02);\n    position: absolute;\n    z-index: 10000;\n  }\n\n  .content {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-height: 60vh;\n    margin: 16px;\n    color: var(--text-black);\n    background-color: var(--bg);\n    box-shadow: 0 1px 2px rgba(0,0,0,0.07), \n                0 2px 4px rgba(0,0,0,0.07), \n                0 4px 8px rgba(0,0,0,0.07), \n                0 8px 16px rgba(0,0,0,0.07),\n                0 16px 32px rgba(0,0,0,0.07), \n                0 32px 64px rgba(0,0,0,0.07);\n    position: absolute;\n  }\n\n\n  .scroll-wrapper {\n    width: 100%;\n    height: 100%;\n    overflow-y: scroll;\n  }\n\n  @media (min-width: 768px) {\n    .scroll-wrapper {\n    overflow-y: hidden;\n  }\n}\n  .scroll-wrapper .title {\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    background-image: linear-gradient(var(--usa-lightlightblue), var(--usa-lightblue));\n  }\n\n  .scroll-wrapper > div {\n    width: 100%;\n    padding: 0.5rem 1rem;\n  }\n\n  h2, h3 {\n    color: var(--text-black);\n  }\n\n  h2 {\n    font-family: var(--font-01);\n    font-size: 1.1rem;\n    font-weight: bold;\n  }\n\n  h3 {\n    margin: 0 0 0.1rem 0;\n    font-size: 0.9rem;\n    font-weight: normal;\n    clear: both;\n  }\n\n  p {\n    display: inline;\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  ul {\n    display: inline-block;\n    list-style-type: none;\n  }\n\n  li {\n    float: left;\n    margin: 0.1rem 0.2rem 0.1rem 0;\n    padding: 0.1rem 0.3rem;\n    font-size: 0.7rem;\n    color: var(--text-black);\n    border: none;\n    border-radius: 0.2rem;\n    background-color: var(--usa-lightlightblue);\n    cursor: pointer;\n    user-select: none;\n    transition: background-color 200ms ease;\n    box-shadow: 0 1px 2px rgba(0,0,0,0.07), \n                0 2px 4px rgba(0,0,0,0.07);\n  }\n\n  li:hover {\n    background-color: var(--usa-lightblue);\n  }\n\n  .small {\n    font-size: 0.7rem;\n    font-weight: normal;\n  }\n\n  .very-small {\n    font-size: 0.6rem;\n    font-weight: normal;\n  }\n\n  .no-break {\n    word-break: keep-all;\n    white-space: nowrap;\n  }\n</style>\n",
    "<script>\n    import { scaleLinear, interpolateMagma  } from 'd3';\n    import ChartXAxis from './ChartXAxis.svelte';\n    import ChartYAxis from './ChartYAxis.svelte';\n    import ChartDatapoint from './ChartDatapoint.svelte';\n\n\n    export let data;\n    export let xRange;\n    export let yRange;\n\n    const padding = 80;\n\n    let chartWidth;\n    let chartHeight;\n\n  //  let jurassicPaint= scaleLinear().domain([0, 40]).range([\"#f2caf7\",\"#6c4870\"])\n\n //   let magmaPaint= scaleLinear().domain([0, 5, 10, 15, 20, 25, 30, 35, 40, 45]).range([\"#150e38\",\"#1d1147\",\"#251255\",\"#390f6e\",\"#440f76\",\"#52137c\",\"#701f81\",\"#802582\",\"#982d80\",\"#b2357b\"])\n\n\n    let mScale = scaleLinear()\n        .domain([-40,160])\n        .range([0,1]);\n\n    $: xScale = scaleLinear()\n        .domain(xRange)\n        .range([padding, chartWidth - padding]);\n\n    $: yScale = scaleLinear()\n        .domain(yRange)\n        .range([chartHeight - padding, padding]);\n\n    $: renderedData = data.map((d) => {\n        \n        let magmaStoke = mScale(d.x)\n        return {\n            x: xScale(d.x),\n            y: yScale(d.y),\n            size: d.x,\n            weight: d.y,\n            name: d.name,\n            hoverName: d.hoverName,\n            stroke: interpolateMagma(magmaStoke)\n    //        stroke: jurassicPaint(d.x)\n        };\n        \n    });\n\n</script>\n\n<div class=\"chart\" id=\"scatter-chart\" bind:clientWidth={chartWidth} bind:clientHeight={chartHeight}>\n    {#if (chartWidth)}\n        <svg\n            class=\"scatter-chart\"\n            width={chartWidth}\n            height={chartHeight}\n            style='overflow: visible;'\n        >\n            <ChartXAxis\n                scale={xScale}\n                y={chartHeight - padding}\n            />\n            <ChartYAxis\n                scale={yScale}\n                x={padding}\n            />\n            {#each renderedData as { x, y, name, stroke, hoverName, size, weight }}\n                <ChartDatapoint\n                    x={x}\n                    y={y}\n                    name={name}\n                    hoverName={hoverName}\n                    stroke={stroke}\n                    weight={weight}\n                    size={size}\n                />\n            {/each}\n        </svg>\n    {/if}\n</div>\n\n<div id=\"mypopup\" class=\"mypopup\">\n \n</div>\n\n\n<style>\n    .chart {\n        flex: 1;\n        width: 100%;\n        min-width: 400px;\n        overflow: hidden;\n    }\n\n</style>\n",
    "<script>\n    import { tweened } from 'svelte/motion';\n    import { cubicOut } from 'svelte/easing';\n    import { hovered, selected } from '../stores/eventSelections';\n    import { width, height, panelHeight, mapHeight } from '../stores/dimensions';\n\n\n    export let x;\n    export let y;\n    export let name;\n    export let hoverName;\n    export let stroke;\n    export let weight;\n    export let size;\n\n    const tX = tweened(null, { duration: 0, easing: cubicOut });\n    const tY = tweened(null, { duration: 0, easing: cubicOut });\n\n    $: tX.set(x);\n    $: tY.set(y);\n\n\n  function handleEventMouseover(event) {\n\n\n    //reset popup content for each datapoint\n    let mypopup = document.getElementById(\"mypopup\");\n    mypopup.innerHTML = '';\n\n\n    // to account for the area that is expndable\n    let topContentHeight = document.getElementById(\"expand-content\")\n\n\n\n    let adjust = 618;\n\n    if($width < 642){\n    adjust = 670\n    }\n\n\n\n// place on right for left half of screen\nif (x <= ($width/2)){\nmypopup.className=\"mypopup\"\nmypopup.style.left = ((event.target.getBoundingClientRect().x) + 20 ) + 'px';\nmypopup.style.top = ((window.scrollY + event.target.getBoundingClientRect().y) - topContentHeight.offsetHeight - adjust) + 'px';\n\n}\n\n// place tooltip on left for right half of screen\nelse {\nmypopup.className=\"popup-right\"\nmypopup.style.left = ((event.target.getBoundingClientRect().x) - 300 ) + 'px';\nmypopup.style.top = ((window.scrollY + event.target.getBoundingClientRect().y) - topContentHeight.offsetHeight - adjust) + 'px';     \n\n}\n\n\n\n\n\n\n\n\n\n\n    //create popup content and append\n    let div = document.createElement(\"div\");\n    div.innerHTML =\n\n    '<span style=\"color:' + stroke + ';\"><h2>' + hoverName + '</h2><hr class=\"popup-break\" />\\n' + \n    '<b>Max Size:</b> ' + size + ' ft <br />\\n' + \n    '<b>Max Weight:</b> ' + weight + ' lbs</span>' \n\n      mypopup.appendChild(div);\n      mypopup.style.display = \"block\";\n\n      // fill color \n      event.target.attributes.fill.value = stroke;\n\n\n  }\n\n  function handleEventMouseout(event) {\n    let mypopup = document.getElementById(\"mypopup\");\n    mypopup.style.display = \"none\";\n\n       // reset fill color \n       event.target.attributes.fill.value = \"none\";\n  }\n\n</script>  \n\n\n<g transform=\"translate({$tX} {$tY})\" \non:mouseover={handleEventMouseover}\non:mouseout={handleEventMouseout}\n>\n\n       <circle name={name} hoverName={hoverName} cx=\"0\" cy=\"0\" r=\"10\" stroke={stroke} stroke-width=\"2.5\" fill=\"none\"\n       testy={$tY} testx={$tX} class=\"chart-g\" id=\"chart-{hoverName}\"/>\n  \n</g>\n\n\n\n{#if (name)}\n  {#if (x <= ($width/2))}\n       <!-- label-->\n       <g class=\"centroid-name-label place-label\" transform=\"translate({$tX + 10} {$tY - 20})\">\n          <text class=\"chart-text\" fill={stroke} style=\"transition: opacity 600ms ease;\">{hoverName}</text>\n       </g>\n  {/if}\n  \n  {#if (x > ($width/2))}\n       <!-- label-->\n       <g class=\"centroid-name-label place-label\" transform=\"translate({$tX - 100} {$tY - 20})\">\n          <text class=\"chart-text\" fill={stroke} style=\"transition: opacity 600ms ease;\">{hoverName}</text>\n       </g>\n  {/if}\n{/if}\n\n\n\n<style>\n  .place-label{\n    padding: 6px;\n  }\n  .chart-g{\n    position: absolute;\n    z-index: 9999;\n    pointer-events: all;\n  }\n  .chart-text{\n    position: absolute;\n    z-index: -1;\n    pointer-events: none;\n  }\n</style>\n",
    "<script>\n    export let options = [];\n    export let selected;\n\n    function renameOption(option) {\n        if (option === 'a'){\n                return 'All Prehistoric Creatures'\n            }\n           else if (option === 'b'){\n                return '0-10 ft'\n            }\n           else if (option === 'c'){\n                return '11-25 ft'\n            }\n           else if (option === 'd'){\n                return '26-40 ft'\n            }\n           else if (option === 'e'){\n                return '40+ ft'\n            }\n            else {\n                return option\n            }\n    }\n    \n</script>\n\n<div class=\"selector\">\n    {#each options as option}\n        <span>\n            <input\n                type=\"radio\"\n                id={option}\n                on:change={() => (selected = option)}\n                checked={selected === option}\n            /><br />\n            <label for={option}>{renameOption(option)}</label>\n        </span>\n    {/each}\n</div>\n\n<style>\n    .selector {\n        display: flex;\n        justify-content: center;\n        gap: 35px;\n        width: 100%;\n        height: 100px;\n        font-size: 1rem;\n        font-family: var(--font-02);\n        text-align: center;\n    }\n        \n    \n</style>\n",
    "<script>\n\timport { csv, min, max } from 'd3';\n\timport { select, selectAll } from 'd3-selection';\n\timport { data as csvData } from '../inputs/dataPaths';\n\timport Chart from './Chart.svelte';\n\timport ChartSelector from './ChartSelector.svelte';\n\timport { onMount } from \"svelte\";\n\timport { afterUpdate } from 'svelte';\n\n\tlet fossilSpots10, fossilSpots25, fossilSpots40, fossilSpots200, allfossilSpots;;\n\tlet selectedData, selectedOption;\n\tlet chartData = {};\n\n\n\tonMount(async () => {\n\n\t\tconst dinoChartData = await csv(csvData, (d, i) => {\n\t\t\treturn {\n\t\t\t\tx: parseFloat(d.size),\n\t\t\t\ty: parseFloat(d.weight),\n\t\t\t\tsize: parseFloat(d.size),\n\t\t\t\tweight: parseFloat(d.weight),\n\t\t\t\tname: d.name,\n\t\t\t\thoverName: d.name\n\t\t\t  };\n\n\n\t});\n\n\t\tallfossilSpots = dinoChartData.map(({name, ...d}) => d)\n\t\tfossilSpots10 = dinoChartData.filter(d => d.x < 11);\n\t\tfossilSpots25 = dinoChartData.filter(d => d.x < 26  && d.x > 10);\n\t\tfossilSpots40 = dinoChartData.filter(d => d.x < 40  && d.x > 25);\n\t\tfossilSpots200 = dinoChartData.filter(d => d.x > 39);\n\n\n\t\tif(dinoChartData){\n\t\tselectedOption = 'a';\n\t\t\t}\n});\n\n\n\n\t$: chartData.a = allfossilSpots;\n\t$: chartData.b = fossilSpots10;\n\t$: chartData.c = fossilSpots25;\n\t$: chartData.d = fossilSpots40;\n\t$: chartData.e = fossilSpots200;\n\n\t$: if (chartData.a) {\n\t\tselectedData = chartData[selectedOption].sort((a, b) => a.x < b.x ? 1 : -1);\n\t}\n\t   \n\n    afterUpdate(() => {\n\t\tarrangeLabels()\n});\n\n\n\n\nfunction arrangeLabels() {\n  var svg = select(\".scatter-chart\")\n  var move = 1;\n  while(move > 0) {\n    move = 0;\n    svg.selectAll(\".place-label\")\n       .each(function() {\n         var that = this,\n             a = this.getBoundingClientRect();\n         svg.selectAll(\".place-label\")\n            .each(function() {\n\t\t\t  if(this != that) {\n                var b = this.getBoundingClientRect();\n                if((Math.abs(a.left - b.left) * 2 < (a.width + b.width)) &&\n                   (Math.abs(a.top - b.top) * 2 < (a.height + b.height))) {\n                  // overlap, move labels\n                  // console.log('overLap ')\n                  var dx = (Math.max(0, a.right - b.left) +\n                           Math.min(0, a.left - b.right)) * 0.01,\n                      dy = (Math.max(1, a.bottom - b.top) +\n                           Math.min(1, a.top - b.bottom)) * 0.02,\n                      tt = getTranslation(select(this).attr(\"transform\")),\n                      to = getTranslation(select(that).attr(\"transform\"));\n                  move += Math.abs(dx) + Math.abs(dy);               \n                  to.translated = [ (to[0] + dx), (to[1] + dy) ];\n                  tt.translated = [ (tt[0] - dx), (tt[1] - dy) ];\n\n\n                  select(this).attr(\"transform\", \"translate(\" + tt.translated + \")\");\n                  select(that).attr(\"transform\", \"translate(\" + to.translated + \")\");\n                  a = this.getBoundingClientRect();\n\n                }\n              }\n  \n\n\n\n            });                     \n       });\n  }\n}\n\nfunction getTranslation(transform) {\n  // Create a dummy g for calculation purposes only. This will never\n  // be appended to the DOM and will be discarded once this function \n  // returns.\n  var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  \n  // Set the transform attribute to the provided string value.\n  g.setAttributeNS(null, \"transform\", transform);\n  \n  // consolidate the SVGTransformList containing all transformations\n  // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n  // its SVGMatrix. \n  var matrix = g.transform.baseVal.consolidate().matrix;\n  \n  // As per definition values e and f are the ones for the translation.\n  return [matrix.e, matrix.f];\n}\n\n\t\n</script>\n{#if (selectedData)}\n<div class=\"wrapper\">\n\t<Chart \n\t\tdata={selectedData}\n\t\txRange={[min(chartData[selectedOption].map(d => d.x)), max(chartData[selectedOption].map(d => d.x))]}\n\t\tyRange={[min(chartData[selectedOption].map(d => d.y)), max(chartData[selectedOption].map(d => d.y))]}\n\t/>\n\n\t<section class=\"chart-header\">Prehistoric Life -  Size and Weight distribution</section>\n\n\t<ChartSelector\n\t\toptions={Object.keys(chartData)}\n\t\tbind:selected={selectedOption}\n\t/>\n</div>\n{/if}\n<style>\n\t.wrapper {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\theight: 650px;\n\t\tpadding: 1rem;\n\t}\n\n\t@media (min-width: 800px) {\n\t\t.wrapper {\n\t\theight: 900;\n\t}\n}\n\n\n\t.chart-header {\n        text-align: center;\n        font-family: var(--font-02);\n\t\tfont-size: 1.25rem;\n\t\tmargin-bottom: 6px;\n    }\n\t\n</style>\n",
    "<script>\n    export let scale;\n    export let y;\n\n    const textOffset = 25;\n\n    $: x0 = scale.range()[0];\n    $: x1 = scale.range()[1];\n\n    $: ticks = scale.ticks();\n</script>\n\n<g class=\"axis\">\n    <line x1={x0} y1={y} x2={x1} y2={y} />\n    <text \n    class=\"label\"\n    transform=\"translate({(x0 + x1)/2} {y + 50})\"\n        >Max Size (Feet)</text>\n\n    <g class=\"ticks\">\n        {#each ticks as tick}\n            <g\n                class=\"tick\"\n                transform=\"translate({scale(tick)} {y + textOffset})\"\n            >\n                <text>\n                    {tick}\n                </text>\n            </g>\n        {/each}\n    </g>\n</g>\n\n\n\n\n<style>\n    line {\n        stroke: gray;\n        stroke-width: 2;\n        stroke-linecap: round;\n    }\n\n    text {\n        fill: gray;\n        text-anchor: middle;\n        font-size: 18px;\n    }\n\n    .label {\n        font-size: 20px;   \n        text-decoration: underline;\n    }\n</style>\n",
    "<script>\n    export let scale;\n    export let x;\n\n    const textOffset = 10;\n\n    $: y0 = scale.range()[1];\n    $: y1 = scale.range()[0];\n\n    $: ticks = scale.ticks();\n</script>\n\n<g class=\"axis\">\n    <line x1={x} y1={y0} x2={x} y2={y1} />\n    <text \n    class=\"label\"\n\n    transform=\"translate({(x - 66) } {y1 - 260}) rotate(270)\"\n        >Max Weight (Pounds)</text>\n    <g class=\"ticks\">\n        {#each ticks as tick}\n            <g\n                class=\"tick\"\n                transform=\"translate({x - textOffset} {scale(tick)})\"\n            >\n                <text dy={textOffset}>\n                    {tick}\n                </text>\n            </g>\n        {/each}\n    </g>\n</g>\n\n<style>\n    line {\n        stroke: gray;\n        stroke-width: 2;\n        stroke-linecap: round;\n    }\n\n    text {\n        fill: gray;\n        text-anchor: end;\n        font-size: 16px;\n    }\n\n    .label {\n        font-size: 20px;   \n        text-decoration: underline;\n    }\n</style>\n",
    "<script>\n  // custom checkbox\n  export let id;\n  export let checked = false;\n</script>\n\n<input type=\"checkbox\"\n       id=\"checkbox-{id}\"\n       class:checked\n       on:click|stopPropagation />\n<label for=\"checkbox-{id}\" class=\"choice-entry-name\">\n  <slot></slot>\n</label>\n\n<style>\n  label {\n    display: inline-block;\n    width: 100%;\n    padding-left: 1.5rem;\n    cursor: pointer;\n    pointer-events: all;\n  } \n\n  input[type=\"checkbox\"] {\n    display: none;\n    pointer-events: all;\n  }\n\n  input[type=\"checkbox\"] + label::before {\n    display: block;\n    width: 15px;\n    height: 15px;\n    margin-top: 3px;\n    margin-right: 0.4rem;\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 3px;\n    background-color: var(--bg);\n    content: \"\";\n    position: absolute;\n    left: 0.5rem;\n  }\n\n  input[type=\"checkbox\"].checked + label::before {\n    box-shadow: inset 0px 0px 0px 3px var(--bg);\n    background-color: var(--prehistoricGreen);\n  }\n</style>\n",
    "<script>\n  import { controlsFilter } from '../stores/filters';\n  import { copytooltipable } from '../actions/copytooltipable';\n\n  import Checkbox from './Checkbox.svelte';\n\n\n  function handleClick() {\n        $controlsFilter = !$controlsFilter;\n  }\n</script>\n\n<ul class=\"checkboxpanel-wrapper\">\n  <li>\n    <Checkbox id=\"checkboxpanel-checkbox-controlsFilter\"\n              checked={$controlsFilter}\n              on:click={handleClick}\n             >\n      <span use:copytooltipable={{content: 'Toggles filter visibility.', showClickMessage: false}}\n            style=\"white-space: nowrap;\">\n        Toggle Filters\n      </span>\n    </Checkbox>\n  </li>\n</ul>\n\n<style>\n  ul {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    margin: 0.1rem 0 0.1rem -0.2rem;\n    list-style-type: none;\n  }\n\n  li {\n    position: relative;\n  }\n\n\n  span {\n    display: inline-block;\n    margin: 2% 0 0 0.5rem;\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    color: var(--prehistoricDarkGreen);\n  }\n\n  .hide {\n    visibility: hidden;\n  }\n</style>\n",
    "<script>\n  import { sourcesSwitch } from '../stores/filters';\n  import { copytooltipable } from '../actions/copytooltipable';\n\n  import Checkbox from './Checkbox.svelte';\n\n  function handleClick() {\n        $sourcesSwitch = !$sourcesSwitch;\n  }\n</script>\n\n<ul class=\"checkboxpanel-wrapper\">\n  <li>\n    <Checkbox id=\"checkboxpanel-checkbox-sourcesSwitch\"\n              checked={$sourcesSwitch}\n              on:click={handleClick}\n             >\n      <span use:copytooltipable={{content: 'Toggles sources visibility.', showClickMessage: false}} \n            style=\"white-space: nowrap;\">\n        Toggle Sources\n      </span>\n    </Checkbox>\n  </li>\n</ul>\n\n<style>\n  ul {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    margin: 0.1rem 0 0.1rem -0.2rem;\n    list-style-type: none;\n  }\n\n  li {\n    position: relative;\n  }\n\n\n  span {\n    display: inline-block;\n    margin: 2% 0 0 0.5rem;\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    color: var(--prehistoricDarkGreen);\n  }\n\n  .hide {\n    visibility: hidden;\n  }\n</style>\n",
    "<script>\n  // controls pane holding filters and buttons\n  import {\n    disinformantNationFilter,\n    timeperiodFilter,\n    dietFilter,\n    textSearchFilter,\n    selectAllFilters,\n    contextData,\n    originalTimeDomain,\n    controlsFilter } from '../stores/filters';\n  import { timeScale } from '../stores/scales';\n  import { fossilDatapoints, switchValueStore } from '../stores/elements';\n  import Dropdown from './Dropdown.svelte';\n  import Fossildropdown from './Fossildropdown.svelte';\n  import SearchText from './SearchText.svelte';\n  import CheckboxPanel from './CheckboxPanel.svelte';\n  import Switch from './Switch.svelte';\n    import CheckboxSources from './CheckboxSources.svelte';\n\n\n  export let timePoints;\n\n  function addCount(filter, property, timePoints) {\n    return filter.map((d) => ({\n      ...d,\n      count: timePoints.map((d) => d[property]).flat().filter((a) => a === d.id).length,\n      liveCount: timePoints.filter((d) => d.show).map((d) => d[property]).flat().filter((a) => a === d.id).length\n    }));\n  }\n\n  let fossilFilter = ['cretaceous', 'jurassic', 'triassic'];\n\n  function fossilCount(filter, dataPoints) {\n    return filter.map((d, i) => ({\n      id: i,\n      title: filter[i],\n      count: filter.length,\n      liveCount: dataPoints[d].length\n    }));\n  }\n\n  function handleButtonClick() {\n    selectAllFilters();\n    contextData.unselectAll();\n    if ($originalTimeDomain) {\n      $timeScale.domain($originalTimeDomain);\n      $timeScale = $timeScale;\n      $originalTimeDomain = null;\n    }\n  }\n\n\n\n\n</script>\n\n{#if (timePoints)}\n  <div class=\"controls-inner-wrapper\">\n    <div class=\"controls\"class:hidden={$controlsFilter}>\n      <SearchText searchString={$textSearchFilter}\n                  label=\"Search\"\n                  on:change={(e) => $textSearchFilter = e.detail}\n                  on:reset={() => textSearchFilter.reset()} />\n                  \n      <Dropdown items={addCount($disinformantNationFilter, 'disinformantNation', timePoints)}\n                label=\"Continent\"\n                superior\n                on:itemsAdded={(e) => disinformantNationFilter.select(e.detail)}\n                on:itemsRemoved={(e) => disinformantNationFilter.unselect(e.detail)} />\n\n\n      <Dropdown items={addCount($dietFilter, 'diet', timePoints)}\n                label=\"Diet\"\n                on:itemsAdded={(e) => dietFilter.select(e.detail)}\n                on:itemsRemoved={(e) => dietFilter.unselect(e.detail)} />\n\n      <Dropdown items={addCount($timeperiodFilter, 'periodEra', timePoints)}\n                label=\"Time Periods\"\n                superior\n                on:itemsAdded={(e) => timeperiodFilter.select(e.detail)}\n                on:itemsRemoved={(e) => timeperiodFilter.unselect(e.detail)} />\n\n       <button class=\"reset-filters\"\n        on:click={() => handleButtonClick()}>\n          Reset\n        </button>\n\n\n    \n\n        {#if ($fossilDatapoints)}\n        <Fossildropdown items={fossilCount(fossilFilter, $fossilDatapoints)}\n                  label=\"Plot Fossil Datapoints\"\n                  />\n        {/if}\n  \n\n\n\n      \n  \n    </div>\n    <div class=\"show-hide\">\n      <CheckboxPanel />\n    </div>\n\n    <div class=\"show-hide\">\n      <CheckboxSources />\n    </div>\n\n      <div class=\"dropdown pangea-switch\">\n        <Switch bind:value={$switchValueStore} label=\"Toggle Pangea\" design=\"inner\" />\n      </div>\n\n\n\n\n  </div>\n{/if}\n\n<style>\n  .controls-inner-wrapper {\n    padding: 0 0.2rem;\n    border: none;\n    border-radius: 3px;\n    background-color: var(--transparentbg);\n    pointer-events: bounding-box;\n  }\n\n  .controls {\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-rows: repeat(9, 1fr);\n    grid-gap: 0.3rem;\n    margin-bottom: 0.7rem;\n  }\n\n  @media (min-width: 460px) {\n    .controls {\n      grid-template-rows: repeat(3, 1fr);\n    }\n  }\n\n  @media (min-width: 800px) {\n    .controls {\n      grid-template-rows: repeat(2, 1fr);\n    }\n  }\n\n  @media (min-width: 1250px) {\n    .controls {\n      grid-template-rows: repeat(1, 1fr);\n    }\n  }\n\n  @media (min-width: 1850px) {\n    .controls {\n      grid-template-rows: repeat(1, 1fr);\n    }\n  }\n\n  button {\n    pointer-events: all;\n  }\n\n  button.reset-filters {\n    align-self: flex-end;\n    min-width: 100px;\n    height: 1.7rem;\n    max-height: 1.7rem;\n    margin: 0.3rem 0.3rem 0 0.3rem;\n    padding: 0.1rem 0.3rem;\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    font-weight: normal;\n    line-height: 1.3rem;\n    color: var(--prehistoricDarkGreen);\n    background-color: var(--bg);\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 3px;\n    outline: none;\n    overflow: hidden;\n    transition: all 200ms ease;\n  }\n\n  button.reset-filters:hover {\n    color: var(--bg);\n    background-color: var(--prehistoricGreen);\n    cursor: pointer;\n  }\n\n  .checkbox-panel {\n    display: flex;\n    align-items: center;\n  }\n\n  .show-hide{\n    float: left;\n  }\n\n  .pangea-switch {\n    float: left;\n    font-family: var(--font-02);\n    position: relative;\n    pointer-events: all;\n    font-size: .8rem;\n    color: var(--prehistoricDarkGreen);\n    margin-left: 8px;\n    margin-top: 3px;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n</style>\n",
    "<script>\n  // tooltip on the copy\n  import { fade } from 'svelte/transition';\n\n  export let title = '';\n  export let content = '';\n  export let x = 0;\n  export let y = 0;\n  export let showClickMessage = false;\n\n  const maxWidth = 300;\n  const margin = 10;\n\n  let width = maxWidth;\n  let left = 0;\n\n  $: {\n    if (x - width / 2 < 0) {\n      left = margin;\n    } else {\n      left = x - width / 2;\n    }\n\n    if (x + width - document.body.offsetWidth > 0) {\n      left = document.body.offsetWidth - width - margin;\n    }\n  }\n</script>\n\n<div class=\"copy-tooltip\"\n     bind:clientWidth={width}\n     style=\"left: {left}px; top: {y}px; width: {maxWidth}px;\"\n     transition:fade={{duration: 200}}>\n  <div class=\"content\">\n    <h2>{title}</h2>\n    <p>{content}</p>\n    {#if (showClickMessage)}\n      <p class=\"footer\">Click to read more.</p>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .copy-tooltip {\n    margin-right: 1rem;\n    position: absolute;\n    z-index: 10000;\n  }\n\n  .content {\n    width: 100%;\n    height: 100%;\n    padding: 1rem;\n    font-family: var(--font-02);\n    color: var(--text-black);\n    background-color: var(--bg);\n    box-shadow: 0 1px 2px rgba(0,0,0,0.07), \n                0 2px 4px rgba(0,0,0,0.07), \n                0 4px 8px rgba(0,0,0,0.07), \n                0 8px 16px rgba(0,0,0,0.07),\n                0 16px 32px rgba(0,0,0,0.07), \n                0 32px 64px rgba(0,0,0,0.07);\n  }\n\n  h2 {\n    margin: 0.2rem 0;\n    font-size: 0.9rem;\n  }\n\n  p {\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  p.footer {\n    margin: 0.2rem 0;\n    font-size: 0.7rem;\n  }\n</style>\n",
    "<script>\n  // a custom dropdown\n  import { createEventDispatcher } from 'svelte';\n  import { slide } from 'svelte/transition';\n  import { sortConsistently } from '../utils/misc';\n\n  import Checkbox from './Checkbox.svelte';\n\n  export let items = [];\n  export let label = '';\n  export let nameField = 'id';\n  export let hideOneHitWonders = false;\n  export let superior = false;\n\n  const dispatch = createEventDispatcher();\n\n  let elem;\n  let expanded = false;\n\n  function handleBodyClick() {\n    expanded = false\n  }\n\n  function toggleExpanded() {\n    expanded = !expanded;\n  }\n\n  function selectAll() {\n    dispatch('itemsAdded', items.map((d) => d.id));\n  }\n\n  function unselectAll() {\n    dispatch('itemsRemoved', items.map((d) => d.id));\n  }\n\n  function handleDropdownClick() {\n    toggleExpanded();\n  }\n\n  function handleChoiceClick(id) {\n    console.log(id)\n    if (!items.filter((d) => d.selected).map((d) => d.id).includes(id)) {\n      dispatch('itemsAdded', id);\n    } else {\n      dispatch('itemsRemoved', id);\n    }\n  }\n</script>\n\n<svelte:body on:click={(e) => handleBodyClick(e)}></svelte:body>\n\n<div class=\"dropdown\" bind:this={elem}>\n  <div class=\"label\">\n    {label}\n  </div>\n  <div class=\"selected-items\" on:click|stopPropagation={handleDropdownClick}>\n    <span class=\"selected-items-icon\"></span>\n    <span class=\"selected-items-text\">\n      {items.filter((d) => d.selected).length === 0\n        ? 'none'\n        : (items.every((d) => d.selected && items.length > 1)\n          ? 'all'\n          : items.filter((d) => d.selected).map((d) => d[nameField]).join(', '))}\n    </span>\n    <button class=\"selected-items-arrow\">\n      <svg class:expanded width=\"15\" height=\"10\">\n        <path d=\"M0 0L15 0L7.5 10Z\"></path>\n      </svg>\n    </button>\n  </div>\n  <div class=\"choice-wrapper\">\n    {#if (expanded)}\n      <div class=\"choice\" transition:slide class:superior>\n        <div class=\"choice-controls\">\n          <button class=\"choice-controls-selectall\" on:click|stopPropagation={selectAll}>Select all</button>\n          <button class=\"choice-controls-unselectall\" on:click|stopPropagation={unselectAll}>Unselect all</button>\n        </div>\n        <ul class=\"choice-list\">\n          {#each items.sort((a, b) => -sortConsistently(a, b, 'id', 'id')) as item, i (item.id)}\n            {#if (!(hideOneHitWonders && item.count === 1))}\n              <li on:click|stopPropagation>\n                <Checkbox id=\"{label}-{i}\"\n                          checked={item.selected}\n                          on:click={() => handleChoiceClick(item.id)}>\n                  <span class=\"choice-entry-name\">{item[nameField]}</span>\n                  {#if (item.liveCount)}\n                    <span class=\"choice-entry-count\">({item.liveCount})</span>\n                  {:else if (item.source)}\n                    <span class=\"choice-entry-source\">({item.source})</span>\n                  {/if}\n                </Checkbox>\n              </li>\n            {/if}\n          {/each}\n        </ul>\n        {#if (hideOneHitWonders)}\n          <p class=\"info\">{label}s with only one result in the dataset are hidden.</p>\n        {/if}\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .dropdown {\n    align-self: flex-end;\n    display: flex;\n    flex-direction: column;\n    font-family: var(--font-02);\n    width: 200px;\n    max-width: 200px;\n    min-width: 200px;\n    margin: 0.3rem 0.3rem 0 0.3rem;\n    position: relative;\n    pointer-events: all;\n  }\n\n  .label {\n    margin: 0 0 0.1rem 0;\n    font-size: 0.8rem;\n    color: var(--prehistoricDarkGreen);\n  }\n\n  .selected-items {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 1.7rem;\n    padding: 0.1rem 0.3rem;\n    font-size: 0.8rem;\n    background-color: var(--bg);\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 3px;\n    cursor: pointer;\n  }\n\n  .selected-items-text {\n    width: 100%;\n    color: var(--text-black);\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  .selected-items-arrow {\n    background: none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n\n  .selected-items-arrow svg {\n    margin-top: 0.2rem;\n    stroke: none;\n    fill: var(--prehistoricGreen);\n    transition: transform 400ms ease;\n  }\n\n  .selected-items-arrow svg.expanded{\n    transform: rotate(-540deg);\n  }\n\n  .choice-wrapper {\n    width: 100%;\n    height: 0;\n    position: relative;\n  }\n\n  .choice {\n    width: 100%;\n    border: 2px solid var(--prehistoricLightGreen);\n    border-radius: 3px;\n    background-color: var(--bg);\n    position: absolute;\n    z-index: 12000;\n    top: 0;\n  }\n\n  .superior {\n    z-index: 100000 !important;\n  }\n\n  .choice-controls {\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n\n  .choice-controls button {\n    margin: 0.5rem;\n    padding: 0.2rem 0.5rem;\n    color: var(--bg);\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    cursor: pointer;\n  }\n\n  button.choice-controls-selectall {\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  button.choice-controls-unselectall {\n    background-color: var(--prehistoricDarkGreen);\n  }\n\n  ul.choice-list {\n    width: 100%;\n    max-height: 600px;\n    overflow-y: scroll;\n    list-style-type: none;\n    font-size: 0.8rem;\n    position: relative;\n  }\n\n  ul.choice-list li {\n    padding: 0.4rem 0.5rem;\n    cursor: pointer;\n    background-color: var(--bg);\n    transition: background-color 200ms ease;\n  }\n\n  ul.choice-list li:hover {\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  .choice-entry-count, .choice-entry-source {\n    font-size: 0.8em;\n  }\n\n  .choice-entry-source {\n    display: block;\n  }\n\n  p.info {\n    padding: 0.4rem 0.5rem;\n    font-size: 0.7rem;\n    color: var(--dfrlab-gray);\n  }\n</style>\n",
    "<script>\n  // a case tooltip (event = case)\n  import { width, panelHeight, controlsHeight } from '../stores/dimensions';\n  import { tooltip } from '../stores/eventSelections';\n  import { fade, slide } from 'svelte/transition';\n  import { timeFormat } from 'd3';\n  import { extractHostname, removeSpace } from '../utils/misc';\n  import { textSearchFilter } from '../stores/filters';\n  import { images } from '../inputs/dataPaths';\n  \n  import EventTooltipCross from './EventTooltipCross.svelte';\n\n\n  const offset = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  };\n  const contentOffset = -20;\n\n  const attributionTf = timeFormat('%B %d, %Y');\n  const activityTf = timeFormat('%B %Y');\n\n  let elem;\n  let tWidth, tHeight;\n  let side;\n  let left, top, contentTop;\n  let scrollWrapper;\n  let paragraphs;\n\n  let scoreQuestionsExpanded = false;\n\n  function highlight(s) {\n    if (!$textSearchFilter || $textSearchFilter === '') return s;\n    return s.replace(new RegExp($textSearchFilter.toLowerCase().split(' or ').join('|'), 'gi'), (match) => `<span class=\"highlighted\">${match}</span>`);\n  }\n\n  $: if (showTooltip) {\n    scoreQuestionsExpanded = false;\n\n    side = $width - $tooltip.tp.x < $width / 2 ? 'left' : 'right';\n    \n    top = $tooltip.tp.fy - offset.top;\n\n    // adjust for the difference between mouse hover point and balloon center\n    const balloonPos = $tooltip.e.pageY;\n\n    // the regular tooltip offset to the balloon\n    contentTop = contentOffset;\n\n    // if the tooltip hits the lower page boundary\n    if (balloonPos + contentTop + tHeight - window.pageYOffset > window.innerHeight) {\n      // console.log('lower')\n      contentTop -= balloonPos + tHeight - window.pageYOffset - window.innerHeight;\n    }\n\n    // if the tooltip hits the upper page boundary\n    if (balloonPos + contentTop - window.pageYOffset < $controlsHeight) {\n      // console.log('upper')\n      contentTop -= balloonPos + contentTop - window.pageYOffset - $controlsHeight - 50;\n    }\n\n    // // if the tooltip hits the upper border of the SVG\n    if ($tooltip.tp.fy + contentTop < $controlsHeight) {\n      // console.log('border')\n      contentTop -= $tooltip.tp.fy + contentTop - $controlsHeight;\n    }\n    \n    if (side === 'left') {\n      left = $tooltip.tp.x - tWidth + offset.left;\n    } else if (side === 'right') {   \n      left = $tooltip.tp.x - offset.left;\n    }\n\n    if (scrollWrapper) scrollWrapper.scrollTo(0, 0);\n\n    // translate tooltip content to html\n    let tooltipText = $tooltip.tp.tooltipContent;\n    paragraphs = tooltipText.split(\"<p>\");\n    let numberOfParagraphs = paragraphs.length;\n  //   console.log(paragraphs[0],paragraphs[1],paragraphs[2] );\n //    console.log(numberOfParagraphs);\n  }\n\n  $: showTooltip = ($tooltip && $tooltip.tp && $tooltip.tp.show);\n</script>\n\n{#if (showTooltip)}\n  <div class=\"tooltip\"\n       style=\"left: {left}px; top: {top}px;\"\n       bind:clientWidth={tWidth}\n       on:click|stopPropagation\n       on:mouseover|stopPropagation\n       in:fade={{duration: 200}}\n       >\n    <EventTooltipCross {tWidth} {offset} {side} />\n    <div class=\"mouse-catcher\"\n          style=\"width: {tWidth}px;\n                 height: {Math.max(10, Math.abs(contentTop) - $tooltip.tp.rSizeTot + 25)}px;\n                 position: absolute;\n                 top: {contentTop - 10}px;\"></div>\n    <div class=\"mouse-catcher\"\n          style=\"width: {tWidth}px;\n                 height: {Math.abs(tHeight - Math.abs(contentTop))}px;\n                 position: absolute;\n                 top: {$tooltip.tp.rSizeTot + 5}px;\"></div>\n    <div class=\"content\"\n         bind:this={elem}\n         bind:clientHeight={tHeight}\n         style=\"top: {contentTop}px; margin: 0px {$tooltip.tp.rSizeTot / 3 + offset.left}px;\">\n      <div class=\"scroll-wrapper\"\n           bind:this={scrollWrapper}>\n           \n        <div class=\"title title-bg\">\n          \n          <section class=\"era-labels\">\n\n          <span class=\"title-header\">{$tooltip.tp.name}</span>\n\n\n            {#if ($tooltip.tp.periodEra === 'Cretaceous')} \n            <span class=\"tag-label Cretaceous\"> Cretaceous  </span>\n            {/if}\n            {#if ($tooltip.tp.periodEra === 'Jurassic')} \n            <span class=\"tag-label Jurassic\"> Jurassic  </span>\n            {/if}\n            {#if ($tooltip.tp.periodEra === 'Triassic')} \n            <span class=\"tag-label Triassic\"> Triassic  </span>\n            {/if}\n            {#if ($tooltip.tp.periodEra === 'Paleogene')} \n            <span class=\"tag-label Paleogene\"> Paleogene  </span>\n            {/if}\n            {#if ($tooltip.tp.periodEra === 'Neogene')} \n            <span class=\"tag-label Neogene\"> Neogene  </span>\n            {/if}\n            {#if ($tooltip.tp.periodEra === 'Permian')} \n            <span class=\"tag-label Permian\"> Permian  </span>\n            {/if}\n            {#if ($tooltip.tp.periodEra === 'Carboniferous')} \n            <span class=\"tag-label Carboniferous\"> Carboniferous  </span>\n            {/if}\n          </section>\n\n          <div class=\"title-top\">\n            <section class=\"dino-stats\">  \n              <div class=\"stats-item\"><span><strong>Length:</strong> {$tooltip.tp.size} ft</span></div>\n              <div class=\"stats-item\"><span><strong>Weight:</strong> {$tooltip.tp.weight} lbs</span></div>\n              <div class=\"stats-item\"><span><strong>Min Date:</strong> {$tooltip.tp.startDate} MYA</span></div>\n              <div class=\"stats-item\"><span><strong>Max Date:</strong> {$tooltip.tp.endDate} MYA</span></div>\n              <div class=\"stats-item\"><span><strong>Diet:</strong> {$tooltip.tp.diet}</span></div>\n              <div class=\"stats-item\"><span><strong>Region:</strong> {$tooltip.tp.disinformantNation}</span></div>\n            </section>\n          </div>\n\n\n          <div class=\"image\">\n            <img src=\"{images}{removeSpace($tooltip.tp.name.toLowerCase())}.jpg\" alt={$tooltip.tp.name} />\n          </div>\n\n\n        </div>\n\n\n\n        {#if ($tooltip.tp.tooltipContent)}\n        <div class=\"description\">\n\n\n\n\n          {#if ($tooltip.tp.periodEra)}\n          <div class=\"tt-image\">\n            <img class=\"image\" src=\"{images}{$tooltip.tp.periodEra}.jpg\" alt={$tooltip.tp.periodEra} />\n          </div>\n          {/if}\n          <!-- Just for styling the fist paragraph and image differently-->\n          <p>{@html highlight(paragraphs[0])}</p>\n\n\n\n            {#each paragraphs as paragraph, i}\n              {#if i > 0} \n              <div class=\"image\">\n                <img src=\"{images}{removeSpace($tooltip.tp.name.toLowerCase())}{i}.jpg\" alt={$tooltip.tp.name} />\n              </div>\n                <p>{@html highlight(paragraph)}</p>\n              {/if}\n            {/each}\n            {#if ($tooltip.tp.extraImage === 'yes')}\n            <div class=\"image\">\n              <img src=\"{images}{$tooltip.tp.name.toLowerCase()}3.jpg\" alt={$tooltip.tp.name} />\n            </div>\n            {/if}\n         </div>\n        {/if}\n\n\n\n        <div class=\"link\">\n          Wiki Link:\n          <a href=\"{$tooltip.tp.wikiURL}\" target=\"_blank\" class=\"no-float\">{$tooltip.tp.name}</a>\n        </div>\n\n    \n      </div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .tooltip {\n    width: 50%;\n    /* min-width: 550px; */\n    font-family: var(--font-02);\n    position: absolute;\n    z-index: 10000;\n  }\n\n  /*\n  @media (min-width: 800px) {\n    .tooltip {\n      width: 21%;\n      min-width: 550px;\n    }\n  }\n  */\n\n  .content {\n    display: flex;\n    flex-direction: column;\n    max-height: 60vh;\n    color: var(--text-black);\n    background-color: var(--bg);\n    pointer-events: all;\n    box-shadow: 0 1px 2px rgba(0,0,0,0.07), \n                0 2px 4px rgba(0,0,0,0.07), \n                0 4px 8px rgba(0,0,0,0.07), \n                0 8px 16px rgba(0,0,0,0.07),\n                0 16px 32px rgba(0,0,0,0.07), \n                0 32px 64px rgba(0,0,0,0.07);\n    position: absolute;\n  }\n\n  .scroll-wrapper {\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  .scroll-wrapper .title {\n    padding: 1rem;\n  /*  background-image: linear-gradient(var(--usa-lightlightred), var(--usa-lightred)); */\n    position: relative;\n  }\n\n\n  .scroll-wrapper::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  .scroll-wrapper::-webkit-scrollbar:horizontal {\n    height: 7px;\n  }\n\n  .scroll-wrapper::-webkit-scrollbar:vertical {\n    width: 12px;\n  }\n\n  .scroll-wrapper::-webkit-scrollbar-thumb {\n    background-color:var(--prehistoricDarkGreen);\n  }\n\n  .scroll-wrapper > div {\n    width: 100%;\n    padding: 0.5rem 1rem;\n  }\n\n  h2, h3 {\n    color: var(--text-black);\n  }\n\n  h2 {\n    margin: 0 0 0 0;\n    font-size: 2.1rem;\n    font-weight: bold;\n  }\n\n  h3 {\n    margin: 0 0 0.1rem 0;\n    font-size: 0.9rem;\n    font-weight: normal;\n    clear: both;\n  }\n\n  \n.title-bg {\n  background-color: var(--cretaceous);\n}\n\n.title-header{\n    color: var(--text-black);\n    margin: 0;\n    font-size: 1.2rem;\n    font-weight: 700;\n}\n\n@media (min-width: 1000px) {\n  .title-header{\n    font-size: 2.1rem;\n  }\n}\n\n\n/* Time Era Styling */\n.Cretaceous {\n  color: var(--cretaceous);\n}\n.Jurassic {\n  color: var(--jurassic);\n}\n.Triassic {\n  color: var(--triassic);\n }\n.Paleogene {\n  color:  var(--paleogene);\n}\n.Neogene {\n  color:  var(--neogene);\n}\n.Permian {\n  color:  var(--permian);\n }\n.Carboniferous {\n  color:  var(--carboniferous);\n }\n\n.tag-label {\n  border-radius: 1rem;\n  padding: 0.5rem;\n  background-color: #577863;;\n}\n\n\n  h3 {\n    margin: 0 0 0.1rem 0;\n    font-size: 0.9rem;\n    font-weight: normal;\n    color: var(--text-black);\n    clear: both;\n  }\n\n  p {\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  ul {\n    display: inline-block;\n    list-style-type: none;\n  }\n\n  li.card, a {\n    float: left;\n    margin: 0.1rem 0.2rem 0.1rem 0;\n    padding: 0.1rem 0.3rem;\n    font-size: 0.8rem;\n    color: var(--text-black);\n    border: none;\n    border-radius: 0.2rem;\n    background-color: var(--prehistoricGreen);\n    cursor: pointer;\n    user-select: none;\n    transition: background-color 200ms ease;\n    box-shadow: 0 1px 2px rgba(0,0,0,0.07), \n                0 2px 4px rgba(0,0,0,0.07);\n  }\n\n  .size ul {\n    display: flex;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  a:hover, li.card:hover {\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  .small {\n    font-size: 0.6rem;\n  }\n\n  .scroll-wrapper .image {\n    min-height: 1%;\n    width: 100%;\n  }\n\n  .image img {\n    width: 100%;\n  }\n\n  .image p {\n    width: 100%;\n    font-size: 0.5rem;\n    text-align: right;\n  }\n\n  .no-float {\n    float: none;\n  }\n\n  .dino-stats{\n    display: grid;\n    grid-auto-flow: column;\n    grid-gap: 0.3rem;\n    flex-direction: column;\n    align-items: center;\n    grid-template-rows: repeat(2,1fr);\n    margin-left: 16px;\n    margin-bottom: 16px;\n  }\n\n  .era-labels {\n    margin-bottom: 1rem;\n  }\n\n  .stats-item{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 0.95rem;\n  }\n\n  .tt-image {\n    width: 50%;\n    float: left;\n    padding: 25px;\n  }\n\n  .description {\n    padding: 5px;\n  }\n\n  .description p {\n    padding: 2em;\n  }\n</style>\n",
    "<script>\n  // the little cross showing up on hovered balloons\n  export let tWidth = 0;\n  export let offset = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  };\n  export let side = 'left';\n</script>\n\n<svg viewBox=\"0 0 {offset.left * 2} {offset.top * 2}\"\n     width={offset.left * 2}\n     height={offset.top * 2}\n     style=\"left: {side === 'right' ? 0 : tWidth - 2 * offset.left}px;\">\n  <path d=\"M{offset.left} 0L{offset.left} {offset.top * 2}\"></path>\n  <path d=\"M0 {offset.top}L{offset.left * 2} {offset.top}\"></path>\n</svg>\n\n<style>\n  svg {\n    pointer-events: none;\n    position: absolute;\n    z-index: 0;\n  }\n\n  path {\n    stroke: var(--prehistoricGreen);\n    stroke-width: 2px;\n    stroke-linecap: round;\n    fill: none;\n  }\n</style>\n",
    "<script>\n  // setting up all events\n  import Event from './Event.svelte';\n  import { hovered, selected } from '../stores/eventSelections';\n\n  export let timePoints = [];\n\n  function handleEventMouseover(event) {\n    $hovered = event.detail;\n  }\n\n  function handleEventClick(event) {\n    const obj = event.detail;\n    if ($selected.map((d) => d.id).includes(obj.id)) {\n      selected.remove(obj);\n    } else {\n      selected.add(obj);\n    }\n  }\n</script>\n\n<g class=\"events\">\n  {#each timePoints as timePoint (timePoint.id)}\n    <Event {timePoint}\n           selected={$selected && $selected.map((d) => d.id).includes(timePoint.id)}\n           hovered={$hovered && $hovered.id === timePoint.id}\n           on:click={handleEventClick}\n           on:mouseover={handleEventMouseover} />\n  {/each}\n</g>\n\n<style>\n  .events {\n    width: 100%;\n    height: 50%;\n    overflow: hidden;\n  }\n</style>\n",
    "<script>\n  // custom checkbox\n  export let id;\n  export let checked = false;\n  export let fossilera = '';\n  export let added = '';\n\n\n</script>\n\n<input type=\"checkbox-{fossilera}\"\n       id=\"checkbox-{id}\"\n       class:checked\n       fossilera={fossilera}\n       added={added}\n       on:click|stopPropagation />\n<label for=\"checkbox-{id}\" class=\"choice-entry-name\">\n  <slot></slot>\n</label>\n\n<style>\n  label {\n    display: inline-block;\n    width: 100%;\n    padding-left: 1.5rem;\n    cursor: pointer;\n    pointer-events: all;\n  } \n\n  input[type=\"checkbox-jurassic\"] {\n    display: none;\n    pointer-events: all;\n  }\n\n  input[type=\"checkbox-jurassic\"] + label::before{\n    display: block;\n    width: 15px;\n    height: 15px;\n    margin-top: 3px;\n    margin-right: 0.4rem;\n    border: 2px solid var(--jurassic);\n    border-radius: 3px;\n    background-color: var(--bg);\n    content: \"\";\n    position: absolute;\n    left: 0.5rem;\n  }\n\n  input[type=\"checkbox-jurassic\"].checked + label::before {\n    box-shadow: inset 0px 0px 0px 3px var(--bg);\n    background-color: var(--jurassic);\n  }\n\n  input[type=\"checkbox-cretaceous\"] {\n    display: none;\n    pointer-events: all;\n  }\n\n  input[type=\"checkbox-cretaceous\"] + label::before{\n    display: block;\n    width: 15px;\n    height: 15px;\n    margin-top: 3px;\n    margin-right: 0.4rem;\n    border: 2px solid var(--cretaceous);\n    border-radius: 3px;\n    background-color: var(--bg);\n    content: \"\";\n    position: absolute;\n    left: 0.5rem;\n  }\n\n  input[type=\"checkbox-cretaceous\"].checked + label::before {\n    box-shadow: inset 0px 0px 0px 3px var(--bg);\n    background-color: var(--cretaceous);\n  }\n\n  input[type=\"checkbox-triassic\"] {\n    display: none;\n    pointer-events: all;\n  }\n\n  input[type=\"checkbox-triassic\"] + label::before{\n    display: block;\n    width: 15px;\n    height: 15px;\n    margin-top: 3px;\n    margin-right: 0.4rem;\n    border: 2px solid var(--triassic);\n    border-radius: 3px;\n    background-color: var(--bg);\n    content: \"\";\n    position: absolute;\n    left: 0.5rem;\n  }\n\n  input[type=\"checkbox-triassic\"].checked + label::before {\n    box-shadow: inset 0px 0px 0px 3px var(--bg);\n    background-color: var(--triassic);\n  }\n</style>\n",
    "<script>\n  // an event (= balloon + shiny circle)\n  import loadData from '../utils/loadData';\n  import { fossilDatapoints } from '../stores/elements';\n  import { onMount } from \"svelte\";\n  import { uniq, sortBy } from 'lodash';\n  import {select} from \"d3\";\n\n  let data;\n  let uniqueNames, uniqueCretaceousNames, uniqueTriassicNames, sortedCretaceousNames, sortedJurassicNames, sortedTriassicNames;\n  let sortedCretaceousFilter, sortedJurassicFilter, sortedTriassicFilter;\n  let jurassicFilter, triassicFilter, cretaceousFilter;\n  let allNames;\n\n  onMount(async () => {\n\n    // load the dataset and add runtime variables\n    data = (await loadData())\n            .map((d) => ({\n              ...d\n            }));\n        })\n\n$: if ($fossilDatapoints && $fossilDatapoints.originaltriassic && $fossilDatapoints.originaljurassic && $fossilDatapoints.originalcretaceous && data) {\n\n\n\n          allNames = data[0].dinoNames\n          uniqueNames = uniq($fossilDatapoints.originaljurassic.map((d) => d.name));\n          sortedJurassicNames = sortBy(uniqueNames.map((d) => d)).join(' | ');\n\n\n          jurassicFilter = allNames.map((d, i) => \n          [allNames[i],\n          $fossilDatapoints.originaljurassic.filter(d =>    d.name.includes(allNames[i]))]\n          );\n          sortedJurassicFilter = sortBy(jurassicFilter, [function(d) { return d[1]; }]).reverse();\n             \n\n          triassicFilter = allNames.map((d, i) => \n          [allNames[i],\n          $fossilDatapoints.originaltriassic.filter(d => d.name.includes(allNames[i]))]\n          );\n\n          sortedTriassicFilter = sortBy(triassicFilter, [function(d) { return d[1]; }]).reverse();\n          uniqueTriassicNames = uniq($fossilDatapoints.originaltriassic.map((d) => d.name));\n          sortedTriassicNames = sortBy(uniqueTriassicNames.map((d) => d)).join(' | ');\n\n          cretaceousFilter = allNames.map((d, i) => \n          [allNames[i],\n          $fossilDatapoints.originalcretaceous.filter(d => d.name.includes(allNames[i]))]\n          );\n\n          sortedCretaceousFilter = sortBy(cretaceousFilter, [function(d) { return d[1]; }]).reverse();\n          uniqueCretaceousNames = uniq($fossilDatapoints.originalcretaceous.map((d) => d.name));\n          sortedCretaceousNames = sortBy(uniqueCretaceousNames.map((d) => d)).join(' | ');\n\n        }\n    \n\nfunction removeAllFossils() {\n\n$fossilDatapoints['cretaceous'] = [];\n$fossilDatapoints['triassic'] = [];\n$fossilDatapoints['jurassic'] = [];\n\nreDraw();\nreturn $fossilDatapoints;\n\n}\n\nfunction addAllFossils() {\n\n  addFossils('cretaceous');\n  addFossils('triassic');\n  addFossils('jurassic');\n\n}\n\nfunction addFossils(fossilEra) {\n\n\nlet originalEra = 'original' + fossilEra\n\n$fossilDatapoints[fossilEra] = $fossilDatapoints[originalEra];\nreDraw();\nreturn $fossilDatapoints;\n\n}\n\nfunction addDino(dino, fossilEra) { \n  \n  removeAllFossils()\n  reDraw();\n  \n  $fossilDatapoints[fossilEra] = dino;\n  reDraw();\n  return $fossilDatapoints;\n\n}\n\n\n\n  function reDraw() {\n\n  let locations = select('#points');\n  var elements = locations.selectAll(\"points.arc\");\n\n  elements.each(function(d, i) {\n  var node = select(this);\n  this.remove();\n\n  })\n\n}\n\nfunction showMoreDetails () {\n  let section = document.getElementById(\"fossil-flex\");\n  section.style.height = '100%';\n\n  let showButton = document.getElementById(\"flex-show\");\n  showButton.remove();\n}\n\n\n</script>\n\n\n<div class=\"choice-controls\">\n  Dinosaur Fossil Sites:<br />\n    <button class=\"choice-controls-unselectall\" on:click|stopPropagation={removeAllFossils}>remove all</button>\n    <button class=\"choice-controls-unselectall\" on:click|stopPropagation={addAllFossils}>add all</button>\n</div>\n<section id=\"fossil-flex\">\n{#if (sortedCretaceousFilter && sortedTriassicFilter && sortedJurassicFilter)}\n\n<section class=\"fossil-wrap\">\n    <h3 class=\"Cretaceous\">Cretaceous Dinosaur Fossils</h3>\n  {#each sortedCretaceousFilter as fossilDatapoint, i}\n    {#if (fossilDatapoint[1].length)}\n      <section class=\"fossil-names\">{fossilDatapoint[0]} ({fossilDatapoint[1].length})<br />\n        <button class=\"CretaceousButton\" on:click={() => addDino(fossilDatapoint[1], 'cretaceous')}>\n            Plot {fossilDatapoint[0]} fossils\n        </button><br />\n        <input id=\"collapsible-Cretaceous-{i}\" class=\"toggle\" type=\"checkbox\">\n        <label for=\"collapsible-Cretaceous-{i}\" class=\"lbl-toggle top\">View Locations</label>\n        <div class=\"collapsible-content\">\n      {#each fossilDatapoint[1] as newTest, i}\n      <p> Dinosaur Name: {newTest.name}, Coords:({newTest.x}, {newTest.y})</p>\n      <p>    Max Age: {newTest.maxAge}, Min Age: {newTest.minAge}</p>\n      <hr />\n      {/each}\n    </div>\n      </section>\n    {/if}\n  {/each}\n</section>\n<section class=\"fossil-wrap\">\n  <h3 class=\"Jurassic\">Jurassic Dinosaur Fossils</h3>\n  {#each sortedJurassicFilter as fossilDatapoint, i}\n    {#if (fossilDatapoint[1].length)}\n      <section class=\"fossil-names\">{fossilDatapoint[0]} ({fossilDatapoint[1].length})<br />\n        <button class=\"JurassicButton\" on:click={() => addDino(fossilDatapoint[1], 'jurassic')}>\n            Plot {fossilDatapoint[0]} fossils\n        </button><br />\n        <input id=\"collapsible-Jurassic-{i}\" class=\"toggle\" type=\"checkbox\">\n        <label for=\"collapsible-Jurassic-{i}\" class=\"lbl-toggle top\">View Locations</label>\n        <div class=\"collapsible-content\">\n      {#each fossilDatapoint[1] as newTest, i}\n      <p> Dinosaur Name: {newTest.name}, Coords:({newTest.x}, {newTest.y})</p>\n      <p>    Max Age: {newTest.maxAge}, Min Age: {newTest.minAge}</p>\n      <hr />\n      {/each}\n    </div>\n      </section>\n    {/if}\n  {/each}\n</section>\n<section class=\"fossil-wrap\">\n  <h3 class=\"Triassic\">Triassic Dinosaur Fossils</h3>\n  {#each sortedTriassicFilter as fossilDatapoint, i}\n  {#if (fossilDatapoint[1].length)}\n  <section class=\"fossil-names\">{fossilDatapoint[0]} ({fossilDatapoint[1].length})<br />\n        <button class=\"TriassicButton\" on:click={() => addDino(fossilDatapoint[1], 'triassic')}>\n            Plot {fossilDatapoint[0]} fossils\n        </button><br />\n        <input id=\"collapsible-Triassic-{i}\" class=\"toggle\" type=\"checkbox\">\n        <label for=\"collapsible-Triassic-{i}\" class=\"lbl-toggle top\">View Locations</label>\n        <div class=\"collapsible-content\">\n        {#each fossilDatapoint[1] as newTest, i}\n      <p> Dinosaur Name: {newTest.name}, Coords:({newTest.x}, {newTest.y})</p>\n      <p>    Max Age: {newTest.maxAge}, Min Age: {newTest.minAge}</p>\n      <hr />\n      {/each}\n    </div>\n      </section>\n    {/if}\n  {/each}\n</section>\n{/if}\n\n</section>\n\n<button \non:click|stopPropagation={showMoreDetails}\nid=\"flex-show\">Fossils Continued... <i class=\"arrow down\"></i></button>\n\n{#if (sortedCretaceousNames && sortedJurassicNames && sortedTriassicNames)}\n\n<section class=\"unique-fossils\">\n\n  <section class=\"fossil-wrap\">\n    <h3 class=\"Cretaceous\">Unique Cretaceous Dinosaur Names ({uniqueCretaceousNames.length})</h3>\n    <input id=\"collapsible-Cretaceous-unique\" class=\"toggle\" type=\"checkbox\">\n    <label for=\"collapsible-Cretaceous-unique\" class=\"lbl-toggle top\">View All Fossil Names</label>\n    <div class=\"collapsible-content\">\n    {sortedCretaceousNames}\n    </div>\n  </section>\n  \n  <section class=\"fossil-wrap\">\n    <h3 class=\"Jurassic\">Unique Jurassic Dinosaur Names ({uniqueNames.length})</h3>\n    <input id=\"collapsible-Jurassic-unique\" class=\"toggle\" type=\"checkbox\">\n    <label for=\"collapsible-Jurassic-unique\" class=\"lbl-toggle top\">View All Fossil Names</label>\n    <div class=\"collapsible-content\">\n    {sortedJurassicNames}\n    </div>\n  </section>\n  \n  \n  <section class=\"fossil-wrap\">\n    <h3 class=\"Triassic\">Unique Triassic Dinosaur Names ({uniqueTriassicNames.length})</h3>\n    <input id=\"collapsible-Triassic-unique\" class=\"toggle\" type=\"checkbox\">\n    <label for=\"collapsible-Triassic-unique\" class=\"lbl-toggle top\">View All Fossil Names</label>\n    <div class=\"collapsible-content\">\n    {sortedTriassicNames}\n    </div>\n  </section>\n\n</section>\n\n{/if}\n<div class=\"separator thicker\"></div>\n\n\n\n\n<style>\n\n    section {\n        text-align: center;\n    }\n    .fossil-names{\n        padding: 0.5rem;\n    }\n    .fossil-wrap{\n        padding: 1rem;\n    }\n    .unique-fossils {\n        padding: 1rem;\n    }\n    #fossil-flex {\n        display: flex;\n        height: 550px;\n        overflow: hidden;\n    }\n    .Cretaceous {\n    color: var(--prehistoricDarkGreen);\n    text-decoration: underline;\n    }\n    .Jurassic {\n    color: #44acc1;\n    text-decoration: underline;\n    }\n    .Triassic {\n    color: #6c4870;\n    text-decoration: underline;\n    }\n    button {\n    align-self: flex-end;\n    min-width: 100px;\n    height: 1.7rem;\n    max-height: 1.7rem;\n    margin: 0.3rem 0.3rem 0;\n    padding: 0.1rem 0.3rem;\n    font-family: var(--font-02);\n    font-size: .8rem;\n    font-weight: 400;\n    line-height: 1.3rem;\n    border-radius: 3px;\n    outline: none;\n    overflow: hidden;\n    transition: all .2s ease;\n    }\n\n    .choice-controls{\n      font-family: var(--font-02);\n    }\n\n\n    .CretaceousButton {\n    color: var(--prehistoricDarkGreen);\n    background-color: var(--bg);\n    border: 2px solid var(--prehistoricGreen);\n    }\n\n    .CretaceousButton:hover {\n    color: var(--bg);\n    background-color: var(--prehistoricGreen);\n    cursor: pointer;\n  }\n\n  .JurassicButton {\n    color: #44acc1;\n    background-color: var(--bg);\n    border: 2px solid #44acc1;\n    }\n\n    .JurassicButton:hover {\n    color: var(--bg);\n    background-color: #44acc1;\n    cursor: pointer;\n  }\n\n  .TriassicButton {\n    color: #6c4870;\n    background-color: var(--bg);\n    border: 2px solid #6c4870;\n    }\n\n    .TriassicButton:hover {\n    color: var(--bg);\n    background-color: #6c4870;\n    cursor: pointer;\n  }\n\n  .arrow {\n  border: solid black;\n  border-width: 0 3px 3px 0;\n  display: inline-block;\n  padding: 3px;\n}\n\n.down {\n  transform: rotate(45deg);\n  -webkit-transform: rotate(45deg);\n}\n\n</style>\n",
    "<script>\n  // a custom dropdown\n  import { slide } from 'svelte/transition';\n  import { sortConsistently } from '../utils/misc';\n  import {select} from \"d3\";\n  import {fossilDatapoints } from '../stores/elements';\n\n\n  import FossilCheckbox from './FossilCheckbox.svelte';\n\n\n  export let items = [];\n  export let label = '';\n  export let nameField = 'id';\n  export let hideOneHitWonders = false;\n  export let superior = false;\n\n\n  let elem;\n  let expanded = false;\n\n  function handleBodyClick() {\n    expanded = false\n  }\n\n  function toggleExpanded() {\n    expanded = !expanded;\n  }\n\n  function handleDropdownClick() {\n    toggleExpanded();\n  }\n\n\n\nfunction handleFossilClick(event, fossilEra) {\n\nconst target = event.target\n\n\nfossilEra = target.getAttribute('fossilera')\nconst state = target.getAttribute('added')\n\nconsole.log('target: ', target)\nconsole.log('state: ', state)\nconsole.log('fossilDatapoints: ', fossilDatapoints)\n\nif (state  === 'false' || state  === '0' ){\n  addFossils(fossilEra);\n  target.classList.add(\"checked\");\n\n\n}\nelse {\n  removeFossils(fossilEra);\n  target.classList.remove(\"checked\");\n\n}\n\n\n  console.log('items: ', items)\n\n\n}\n\nfunction removeFossils(fossilEra) {\n\n $fossilDatapoints[fossilEra] = [];\n\nreDraw();\nreturn $fossilDatapoints;\n\n}\nexport const testy = () => console.log('testing');\n\n\nfunction removeAllFossils() {\n\n$fossilDatapoints['cretaceous'] = [];\n$fossilDatapoints['triassic'] = [];\n$fossilDatapoints['jurassic'] = [];\n\nreDraw();\nreturn $fossilDatapoints;\n\n}\n\nfunction addAllFossils() {\n\n  addFossils('cretaceous');\n  addFossils('triassic');\n  addFossils('jurassic');\n\n}\n\nfunction addFossils(fossilEra) {\n\n  console.log(fossilDatapoints)\n\nlet originalEra = 'original' + fossilEra\n\n$fossilDatapoints[fossilEra] = $fossilDatapoints[originalEra];\nreDraw();\nreturn $fossilDatapoints;\n\n}\n\n\n\n  function reDraw() {\n\n  let locations = select('#points');\n  var elements = locations.selectAll(\"points.arc\");\n\n  elements.each(function(d, i) {\n  var node = select(this);\n  this.remove();\n\n  })\n\n}\n\n\n\n</script>\n\n<svelte:body on:click={(e) => handleBodyClick(e)}></svelte:body>\n\n\n<div class=\"dropdown\" bind:this={elem}>\n  <div class=\"label\">\n    {label}\n  </div>\n  <div class=\"selected-items\" on:click|stopPropagation={handleDropdownClick}>\n    <span class=\"selected-items-icon\"></span>\n    <span class=\"selected-items-text\">\n      {items.filter((d) => d.added).length === 0\n        ? 'toggle fossil locations'\n        : (items.every((d) => d.added && items.length > 1)\n          ? 'all'\n          : items.filter((d) => d.added).map((d) => d[nameField]).join(', '))}\n    </span>\n    <button class=\"selected-items-arrow\">\n      <svg class:expanded width=\"15\" height=\"10\">\n        <path d=\"M0 0L15 0L7.5 10Z\"></path>\n      </svg>\n    </button>\n  </div>\n  <div class=\"choice-wrapper\">\n    {#if (expanded)}\n      <div class=\"choice\" transition:slide class:superior>\n        <div class=\"choice-controls\">\n          <button class=\"choice-controls-selectall\" on:click|stopPropagation={addAllFossils}>Select all</button>\n          <button class=\"choice-controls-unselectall\" on:click|stopPropagation={removeAllFossils}>Unselect all</button>\n        </div>\n        <ul class=\"choice-list\">\n          {#each items.sort((a, b) => -sortConsistently(a, b, 'id', 'id')) as item, i (item.id)}\n            {#if (!(hideOneHitWonders && item.count === 1))}\n              <li on:click|stopPropagation\n              >\n                <FossilCheckbox id=\"{label}-{i}\"\n                          checked={item.liveCount}\n                          added={item.liveCount}\n                          fossilera={item.title}\n                          on:click={handleFossilClick}>\n                  <span class=\"choice-entry-name\">{item.title}</span>\n\n                  {#if (item.liveCount)}\n                    <span class=\"choice-entry-count\">({item.liveCount})</span>\n                  {:else if (item.source)}\n                    <span class=\"choice-entry-source\">({item.source})</span>\n                  {/if}\n                </FossilCheckbox>\n              </li>\n            {/if}\n          {/each}\n        </ul>\n        {#if (hideOneHitWonders)}\n          <p class=\"info\">{label}s with only one result in the dataset are hidden.</p>\n        {/if}\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .dropdown {\n    align-self: flex-end;\n    display: flex;\n    flex-direction: column;\n    font-family: var(--font-02);\n    width: 200px;\n    max-width: 200px;\n    min-width: 200px;\n    margin: 0.3rem 0.3rem 0 0.3rem;\n    position: relative;\n    pointer-events: all;\n  }\n\n  .label {\n    margin: 0 0 0.1rem 0;\n    font-size: 0.8rem;\n    color: var(--prehistoricDarkGreen);\n  }\n\n  .selected-items {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 1.7rem;\n    padding: 0.1rem 0.3rem;\n    font-size: 0.8rem;\n    background-color: var(--bg);\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 3px;\n    cursor: pointer;\n  }\n\n  .selected-items-text {\n    width: 100%;\n    color: var(--text-black);\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  .selected-items-arrow {\n    background: none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n\n  .selected-items-arrow svg {\n    margin-top: 0.2rem;\n    stroke: none;\n    fill: var(--prehistoricGreen);\n    transition: transform 400ms ease;\n  }\n\n  .selected-items-arrow svg.expanded{\n    transform: rotate(-540deg);\n  }\n\n  .choice-wrapper {\n    width: 100%;\n    height: 0;\n    position: relative;\n  }\n\n  .choice {\n    width: 100%;\n    border: 2px solid var(--prehistoricLightGreen);\n    border-radius: 3px;\n    background-color: var(--bg);\n    position: absolute;\n    z-index: 12000;\n    top: 0;\n  }\n\n  .superior {\n    z-index: 100000 !important;\n  }\n\n  .choice-controls {\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n\n  .choice-controls button {\n    margin: 0.5rem;\n    padding: 0.2rem 0.5rem;\n    color: var(--bg);\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    cursor: pointer;\n  }\n\n  button.choice-controls-selectall {\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  button.choice-controls-unselectall {\n    background-color: var(--prehistoricDarkGreen);\n  }\n\n  ul.choice-list {\n    width: 100%;\n    max-height: 600px;\n    overflow-y: scroll;\n    list-style-type: none;\n    font-size: 0.8rem;\n    position: relative;\n  }\n\n  ul.choice-list li {\n    padding: 0.4rem 0.5rem;\n    cursor: pointer;\n    background-color: var(--bg);\n    transition: background-color 200ms ease;\n  }\n\n  ul.choice-list li:hover {\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  .choice-entry-count, .choice-entry-source {\n    font-size: 0.8em;\n  }\n\n  .choice-entry-source {\n    display: block;\n  }\n\n  p.info {\n    padding: 0.4rem 0.5rem;\n    font-size: 0.7rem;\n    color: var(--dfrlab-gray);\n  }\n</style>\n",
    "<script>\n  // info shown on the timeline, e.g. for jumps to table view\n  import { fade } from 'svelte/transition';\n\n  export let selectedItems = [];\n  export let x = 0;\n  export let y = 0;\n\n  let showCounter = 0;\n\n  $: show = selectedItems.length >= 2;\n  $: if (show) showCounter += 1;\n</script>\n\n{#if (show && showCounter <= 2)}\n  <div class=\"info\"\n       style=\"left: {x}px; top: {y}px;\"\n       transition:fade>\n    <div class=\"info-icon\">i</div>\n    <p>Compare your selection in the <span class=\"pseudolink\" on:click|self={() => document.querySelector('#table').scrollIntoView({behavior: 'auto'})}>dataset view</span>.</p>  \n  </div>\n{/if}\n\n<style>\n  .info {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    z-index: 20000;\n  }\n\n  .info-icon {\n    width: 1.2rem;\n    height: 1.2rem;\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    font-weight: bold;\n    color: var(--prehistoricGreen);\n    text-align: center;\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 50%;\n  }\n\n  p {\n    margin-left: 0.4rem;\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    color: var(--text-black);\n    background-color: var(--bg);\n  }\n</style>\n",
    "<script>\n  // collection of viz labels\n  import { timeScale, sizeTotalYScale } from '../stores/scales';\n  import { margin } from '../stores/dimensions';\n  import { timeFormat, format } from 'd3';\n  import { panelHeight } from '../stores/dimensions';\n\n  const lineLength = 70;\n  const offset = 5;\n\n  const commaFormat = format(',');\n  const tf = timeFormat('%b %d, %Y');\n\n  let yScaleText, mapScaleText, timeScaleText;\n</script>\n\n<g class=\"labels disable-select\">\n  <g class=\"time-scale\"\n     transform=\"translate(0 {$sizeTotalYScale.range()[0]})\">\n    {#each $timeScale.ticks(8) as tick}\n      <g class=\"tick\"\n         transform=\"translate({$timeScale(tick)} 20)\">\n        <circle cx=\"0\" cy=\"-20\" r=\"5\" />\n        <text class=\"bg\">{tick}</text>\n        <text>{tick}</text>\n      </g>\n    {/each}\n    <!-- <g class=\"today\" transform=\"translate({$timeScale(new Date())} 20)\">\n      <circle cx=\"0\"\n              cy=\"-20\"\n              r=\"5\"></circle>\n      <text class=\"bg\">Today</text>\n      <text>Today</text>\n    </g> -->\n    <g class=\"time-scale-label\" transform=\"translate({15 + $timeScale.range()[0] - $margin.left / 1.5} 30)\">\n      <path d=\"M0 0l{lineLength} 0\"></path>\n      <text class=\"bg\"\n            dx={lineLength + offset}\n            dy=\"4\">Millions of Years Ago</text>\n      <text bind:this={timeScaleText}\n            dx={lineLength + offset}\n            dy=\"4\">Millions of Years Ago</text>\n      <path d=\"M{timeScaleText ? timeScaleText.getComputedTextLength() + lineLength + 2 * offset: 0} 0l{lineLength} 0\"\n            marker-end=\"url(#arrow)\"></path>\n    </g>\n  </g>\n  <g class=\"y-scale-ticks\"\n     transform=\"translate({15 + $timeScale.range()[0] - $margin.left / 1.5} 0)\">\n    {#each $sizeTotalYScale.ticks(4).slice(1) as tick}\n      <g class=\"tick\"\n          transform=\"translate(0 {$sizeTotalYScale(tick)})\">\n        <text>{commaFormat(tick)}</text>\n      </g>\n    {/each}\n  </g>\n  <g class=\"y-scale\"\n     transform=\"translate({$timeScale.range()[0] - $margin.left / 1.5} {0.95 * $sizeTotalYScale.range()[0]})\">\n    <path d=\"M0 0l0 {-lineLength}\"></path>\n    <text bind:this={yScaleText}\n          transform=\"rotate(270)\"\n          dx={lineLength + offset}\n          dy=\"4\">Size in feet</text>\n    <path d=\"M0 {yScaleText ? -yScaleText.getComputedTextLength() - lineLength - 2 * offset: 0}l0 {-lineLength}\"\n          marker-end=\"url(#arrow)\"></path>\n  </g>\n  <g class=\"map-scale\"\n     transform=\"translate({$timeScale.range()[0] - $margin.left / 1.5} {1.05 * $panelHeight})\">\n    <path d=\"M0 0l0 {lineLength}\"></path>\n    <text bind:this={mapScaleText}\n          transform=\"rotate(270)\"\n          dx={mapScaleText ? -mapScaleText.getComputedTextLength() - lineLength - offset: 0}\n          dy=\"4\">Locations</text>\n    <path d=\"M0 {mapScaleText ? mapScaleText.getComputedTextLength() + lineLength + 2 * offset: 0}l0 {lineLength}\"></path>\n  </g>\n</g>\n\n<style>\n  .time-scale text {\n    fill: var(--text-darkgray);\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n    text-anchor: middle;\n  }\n\n  .time-scale-label text {\n    text-anchor: start;\n  }\n\n  .time-scale text.bg {\n    stroke: var(--bg);\n    stroke-width: 0.1rem;\n    stroke-opacity: 0.85;\n    fill: var(--bg);\n  }\n\n  .time-scale circle {\n    stroke: none;\n    fill: var(--dfrlab-gray);\n  }\n\n  .y-scale-ticks text, .y-scale text, .map-scale text {\n    fill: var(--text-darkgray);\n    font-family: var(--font-02);\n    font-size: 0.85rem;\n  }\n\n  .y-scale-ticks text {\n    font-size: 0.8rem;\n  }\n\n  .time-scale path, .y-scale path, .map-scale path {\n    stroke: var(--text-darkgray);\n    stroke-width: 0.1rem;\n  }\n</style>\n",
    "<script>\n  // additional legend on SVG, currently holding an extra attribution impact legend\n  import {\n    timeScale,\n    sizeTotalYScale,\n    sizeTotalRScale,    \n    sizeShareRScale\n   } from '../stores/scales';\n  import { margin, width } from '../stores/dimensions';\n  import { format } from 'd3';\n\n  const commaFormat = format(',');\n // const rTicks = [$sizeTotalYScale(115), $sizeTotalYScale(40), $sizeTotalYScale(20)];\n    const rTicks = [115, 50, 10];\n // const unscaled = [115, 40, 20]\n\n  let circleScale = 1.15\n\n</script>\n<!--\n<g class=\"legend\"\n   transform=\"translate({$width - ((($sizeTotalYScale(rTicks[0]) + 15) * 2))  + 65  } {$sizeTotalYScale.range()[1] - 60})\">\n  <text transform=\"translate({-$sizeTotalYScale(rTicks[0]) - 20} {$sizeTotalYScale(rTicks.slice(-1)[0])}) rotate(270)\"\n        dy=\"4\">\n    Size in feet\n  </text>\n  <g class=\"total-r-scale\" transform=\"translate(0 {-2 * $sizeTotalYScale(rTicks.slice(-1)[0])})\">\n    {#each rTicks as tick, i}\n      <line x1=\"0\"\n            y1={$sizeTotalYScale(rTicks[0]) - 2 * $sizeTotalYScale(tick)}\n            x2={$sizeTotalYScale(rTicks[0]) + 15}\n            y2={$sizeTotalYScale(rTicks[0]) - 2 * $sizeTotalYScale(tick)}></line>\n      <text class=\"tick\"\n            transform=\"translate({$sizeTotalYScale(rTicks[0]) + 18} {$sizeTotalYScale(rTicks[0]) - 2 * $sizeTotalYScale(tick)})\">\n        {unscaled[i]}\n      </text>\n      <circle cx=\"0\"\n              cy={$sizeTotalYScale(rTicks[0]) - $sizeTotalYScale(tick)}\n              r={$sizeTotalYScale(tick)}></circle>\n    {/each}\n  </g>\n\n</g>\n-->\n\n<g class=\"legend\"\n   transform=\"translate({$width - (rTicks[0] * circleScale) - 65  } {$sizeTotalYScale.range()[1] - 20})\">\n  <text transform=\"translate({0} {(rTicks[0] * circleScale) - 2 * $sizeTotalRScale(rTicks[0]) - 30})\"\n        >\n        Size in feet\n  </text>\n  <g class=\"total-r-scale\" transform=\"translate(0 {-2 * (rTicks.slice(-1)[0]  * circleScale)})\">\n    {#each rTicks as tick, i}\n      <line x1=\"0\"\n            y1={(rTicks[0] * circleScale) - 2 * $sizeTotalRScale(tick)}\n            x2={(rTicks[0] * circleScale) + 15}\n            y2={(rTicks[0] * circleScale) - 2 * $sizeTotalRScale(tick)}></line>\n      <text class=\"tick\"\n            transform=\"translate({(rTicks[0] * circleScale) + 18} {(rTicks[0] * circleScale) - 2 * $sizeTotalRScale(tick)})\">\n        {commaFormat(tick)}\n      </text>\n      <circle cx=\"0\"\n              cy={(rTicks[0] * circleScale) - $sizeTotalRScale(tick)}\n              r={$sizeTotalRScale(tick)}></circle>\n    {/each}\n  </g>\n\n  </g>\n\n<style>\n  line {\n    fill: none;\n    stroke: var(--text-darkgray);\n    stroke-width: 0.05rem;\n    stroke-dasharray: 4px 3px;\n  }\n\n  text {\n    fill: var(--text-darkgray);\n    font-family: var(--font-02);\n    font-size: 0.85rem;\n  }\n\n  text.tick {\n    font-size: 0.8rem;\n  }\n\n  .total-r-scale circle {\n    fill: none;\n    stroke: var(--prehistoricGreen);\n    stroke-width: 0.1rem;\n  }\n\n  .size-pending circle {\n    fill: none;\n    stroke: var(--prehistoricGreen);\n    stroke-width: 0.18rem;\n    stroke-linecap: round;\n    stroke-dasharray: 3px 5px;\n  }\n</style>\n",
    "<script>\n  // loading banner\n</script>\n\n<div class=\"loading-info transparent-bg\">\n  <p>Loading and visualizing...</p>\n</div>\n\n<style>\n  .loading-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    font-family: var(--font-02);\n  }\n\n  p {\n    color: var(--prehistoricGreen);\n    font-size: 1rem;\n  }\n</style>\n",
    "<script>\n  // free text search bar\n  import { createEventDispatcher } from 'svelte';\n\n  export let searchString = '';\n  export let label = '';\n\n  const dispatch = createEventDispatcher();\n\n  function reset() {\n    searchString = '';\n    search();\n  }\n\n  function handleKeyUp(e) {\n    if (e && e.keyCode === 13) search();\n  }\n\n  function handleGoClick() {\n    search();\n  }\n\n  function search() {\n    dispatch('change', searchString);\n  }\n</script>\n\n<div class=\"search-text\">\n  <div class=\"label\">\n    <p>{label}</p>\n    <p>|</p>\n    <span on:click={() => reset()}>Reset</span>\n  </div>\n  <div class=\"search\">\n    <input id=\"table-search-field\"\n            type=\"text\"\n            placeholder=\"Type and press enter\"\n            bind:value={searchString}\n            on:keyup={(e) => handleKeyUp(e)} />\n    {#if (searchString !== '')}\n      <span class=\"button-fields\">\n        <span class=\"reset\"\n                class:active={searchString}\n                on:click={() => searchString = ''}>\n          x\n        </span>\n        <span class=\"go\"\n              class:active={searchString}\n              on:click={() => handleGoClick()}>\n          Go\n        </span>\n      </span>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .search-text {\n    align-self: flex-end;\n    display: flex;\n    flex-direction: column;\n    font-family: var(--font-02);\n    width: 200px;\n    max-width: 200px;\n    min-width: 200px;\n    margin: 0.3rem 0.3rem 0 0.3rem;\n    position: relative;\n    pointer-events: all;\n  }\n\n  .label {\n    display: flex;\n    margin: 0 0 0.1rem 0;\n    font-size: 0.8rem;\n    color: var(--prehistoricDarkGreen);\n  }\n\n  .label > * {\n    padding-right: 0.2rem;\n  }\n\n  .label span {\n    margin: 0 -0.1rem;\n    padding: 0 0.1rem;\n    color: var(--prehistoricDarkGreen);\n    border: none;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: all 200ms ease;\n  }\n\n  .label span:hover {\n    color: var(--bg);\n    background-color: var(--prehistoricGreen);\n  }\n\n  .search {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 1.7rem;\n    font-size: 0.8rem;\n    background-color: var(--bg);\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 3px;\n    position: relative;\n  }\n\n  input {\n    width: 100%;\n    height: 100%;\n    padding: 0.1rem 2.3rem 0.1rem 0.3rem;\n    font-size: 0.8rem;\n    color: var(--text-black);\n    background-color: var(--bg);\n    border: none;\n  }\n\n  .button-fields {\n    display: block;\n    position: absolute;\n    bottom: 0.2rem;\n    right: 0.3rem;\n    z-index: 10001;\n  }\n\n  .reset {\n    display: none;\n    margin-right: 0.3rem;\n    cursor: pointer;\n  }\n\n  .go {\n    cursor: pointer;\n  }\n</style>\n",
    "<script>\n  // shiny circle around balloons\n  import { fade } from 'svelte/transition';\n  import { bloomDuration, growDuration, jitterFactor } from '../transitions/constants';\n  import { sortConsistently } from '../utils/misc';\n\n  export let timePoint;\n  export let tweenedPos;\n  export let selected = false;\n  export let hovered = false;\n\n  let sortedRadii = [];\n\n  $: if (timePoint) sortedRadii = [\n    {\n      id: 2,\n      className: 'reddit',\n      r: (timePoint.rSizeTot * 0.10 + timePoint.rSizeTot * 0.30 + timePoint.rSizeTot * 0.85),\n    },\n    {\n      id: 1,\n      className: 'twitter',\n      r: (timePoint.rSizeTot * 0.30 + timePoint.rSizeTot * 0.85),\n    },\n    {\n      id: 0,\n      className: 'facebook',\n      r: (timePoint.rSizeTot * 0.75),\n    }\n  ]\n  .map((d) => ({...d, r: d.r * sizeFactor}));\n\n // console.log(timePoint);\n\n  $: sizeFactor = 0.85;\n</script>\n\n<g class=\"shiny-circle\"\n   class:selected={selected || hovered}\n   transform=\"translate({tweenedPos.x} {tweenedPos.fy})\"\n   in:fade|local={{duration: bloomDuration, delay: growDuration + timePoint.id * jitterFactor}}\n   out:fade|local={{duration: bloomDuration, delay: timePoint.id * jitterFactor}}>\n  {#each sortedRadii as {id, className, r} (id)}\n    <circle class={className}\n            cx=\"0\"\n            cy=\"0\"\n            r=\"{r }\" />\n  {/each}\n</g>\n\n<style>\n  g {\n    opacity: 0.04;\n    transition: opacity 400ms ease;\n    pointer-events: none;\n  }\n\n  g.selected {\n    opacity: 0.76;\n  }\n\n  circle {\n    stroke: none;\n    opacity: 1;\n  }\n</style>\n",
    "<script>\n  // a custom slider for score selection\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { scaleLinear } from 'd3';\n  import { slidable } from '../actions/slidable';\n\n  export let lockInMode = true;\n  export let label = '';\n  export let showLabel = true;\n  export let min = 0;\n  export let max = 10;\n  export let value = [0, 10];\n  export let showHandleLabels = true;\n  export let startColor = 'white';\n  export let middleColor = null;\n  export let stopColor = 'red';\n  export let barOpacity = 1;\n  export let showBorder = true;\n\n  const dispatch = createEventDispatcher();\n  const handleWidth = 17;\n\n  const pos = {\n    left: 0,\n    right: 0\n  };\n\n  let sliderWidth = 0;\n\n  function handleSlide(e, side) {\n    const newPos = pos[side] + e.detail.dx;\n\n    if (newPos < 0 || newPos > sliderWidth) return;\n    if (side === 'left' && newPos > pos.right) return;\n    if (side === 'left' && newPos < scale.range()[0]) return;\n    if (side === 'right' && newPos < pos.left) return;\n    if (side === 'right' && newPos > scale.range()[1]) return;\n    \n    pos[side] = newPos;\n  }\n\n  function handleSlideEnd(e, side) {\n    if (lockInMode) {\n      dispatch('changed', [Math.round(scale.invert(pos.left), 0),\n                         Math.round(scale.invert(pos.right), 0)]);\n    } else {\n      dispatch('changed', [scale.invert(pos.left), scale.invert(pos.right)]);\n    }\n  }\n\n  $: scale = scaleLinear()\n      .domain([min, max])\n      .range([handleWidth / 2, sliderWidth - 1.7 * handleWidth]);\n\n  $: pos.left = scale(value[0]) || 0;\n  $: pos.right = scale(value[1]) || 0;\n\n  $: background = `linear-gradient(90deg, ${startColor}, ${middleColor ? middleColor + ', ' : ''}${stopColor})`;\n</script>\n\n<div class=\"slider\"\n     bind:clientWidth={sliderWidth}\n     style=\"--handle-width: {handleWidth}px;\">\n  {#if (showLabel)}\n    <div class=\"label\">\n      {label}\n    </div>\n  {/if}\n  <div class=\"slider-body\" class:border={showBorder}>\n    <div class=\"slider-selected-range\"\n         style=\"width: {sliderWidth - 2 * handleWidth}px;\n                margin-left: {1 * handleWidth}px;\n                opacity: {barOpacity};\n                background: {background};\"></div>\n    <div class=\"slider-handle\"\n         class:no-label={!showHandleLabels}\n         style=\"left: {(Math.abs(value[0] - value[1]) < 0.1) ? pos.left - 5 : pos.left}px;\"\n         use:slidable\n         on:slide={(e) => handleSlide(e, 'left')}\n         on:slideend={(e) => handleSlideEnd(e, 'left')}>\n      <span class=\"disable-select\">{showHandleLabels ? Math.round(scale.invert(pos.left), 0) : ''}</span>\n    </div>\n    <div class=\"slider-handle\"\n         class:no-label={!showHandleLabels}\n         style=\"left: {(Math.abs(value[0] - value[1]) < 0.1) ? pos.right + 5 : pos.right}px;\"\n         use:slidable\n         on:slide={(e) => handleSlide(e, 'right')}\n         on:slideend={(e) => handleSlideEnd(e, 'right')}>\n      <span class=\"disable-select\">{showHandleLabels ? Math.round(scale.invert(pos.right), 0) : ''}</span>\n    </div>\n  </div>\n</div>\n\n<style>\n  .slider {\n    display: flex;\n    flex-direction: column;\n    font-family: var(--font-02);\n    width: 200px;\n    max-width: 200px;\n    margin: 0.3rem 0.3rem 0 0.3rem;\n    position: relative;\n    pointer-events: all;\n  }\n\n  .label {\n    margin: 0 0 0.1rem 0;\n    font-size: 0.7rem;\n    color: var(--prehistoricGreen);\n  }\n\n  .slider-body {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 1.7rem;\n    padding: 0.1rem 0;\n    font-size: 0.7rem;\n    background-color: var(--bg);\n    border: none;\n    position: relative;\n  }\n\n  .border {\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 3px;\n  }\n\n  .slider-selected-range {\n    height: 8px;\n    border: none;\n    border-radius: 2px;\n    position: absolute;\n    z-index: 100;\n  }\n\n  .slider-handle {\n    width: var(--handle-width);\n    height: var(--handle-width);\n    border: 2px solid var(--prehistoricGreen);\n    border-radius: 50%;\n    background-color: var(--bg);\n    cursor: pointer;\n    position: absolute;\n    z-index: 10000;\n  }\n\n  .slider-handle > span {\n    width: 100%;\n    height: 100%;\n    font-size: 0.7rem;\n    text-align: center;\n    color: var(--prehistoricGreen);\n    position: absolute;\n  }\n</style>\n",
    "<script>\n  // a source link\n  import { draw } from 'svelte/transition';\n  import { mapHeight, minDim } from '../stores/dimensions';\n  import { linear } from 'svelte/easing';\n  import { growDuration, bloomDuration, jitterFactor } from '../transitions/constants';\n  import { curvyDoubleLine } from '../utils/paths';\n  import { createTweenedPos } from '../transitions/tween';\n  import { usaBlue } from '../utils/colors';\n\n  export let source;\n  export let selected = 'unselected';\n  export let hovered = 'unselected';\n  export let extraFaint = false;\n  export let showPolarizationColor = false;\n\n  const tweenedPos = createTweenedPos();\n\n\n\n\n  function topMargin (point){\n    if( source.disNation === 'Eurasia' ){\n\n\n  point = point + 100\n }\nreturn point\n  }\n\n  function setOpacity(selected, hovered, extraFaint) {\n    if (extraFaint) return 0.2 / 3 / 2;\n\n    let opacity = 0.05 / source.disinformantNation.length;\n\n    if (selected === 'selected' || hovered === 'selected') {\n      opacity = 0.95;\n      return(opacity);\n    }\n    if (selected === 'background' || hovered === 'background') opacity = 0.2 / source.disinformantNation.length;\n\n    return(opacity);\n  }\n\n  $: $tweenedPos = {x: source.x, fy: source.fy, _x: source._x, _y: source._y};\n\n  $: opacity = setOpacity(selected, hovered, extraFaint);\n</script>\n\n{#if (source.show)}\n  <g class=\"source-link\"\n     style=\"opacity: {opacity}; transition: all 700ms ease;\"\n     class:selected={selected || hovered}>\n    <path d={curvyDoubleLine(source.xCountry,\n                             topMargin(source.yCountry),\n                             $tweenedPos._x,\n                             $tweenedPos._y,\n                             $tweenedPos.x,\n                             $tweenedPos.fy + source.rSizeTot - 10,\n                             source.shift,\n                             $mapHeight / 15)}\n          stroke={showPolarizationColor ? source.polarizationColor : usaBlue}\n          stroke-width={$minDim / 200}\n          in:draw|local={{duration: growDuration, delay: source.id * jitterFactor, easing: linear}}\n          out:draw|local={{duration: growDuration, delay: bloomDuration + source.id * jitterFactor, easing: linear}}></path>\n  </g>\n{/if}\n\n<style>\n  path {\n    fill: none;\n  }\n\n  .selected path {\n    opacity: 1;\n  }\n</style>\n",
    "<script>\n  // wrapper plotting centroids and source links\n  import { panelHeight, width, mapHeight } from '../stores/dimensions';\n  import { countries, pangeaRegions, geoPath } from '../stores/map';\n  import {  switchValueStore } from '../stores/elements';\n  import { group } from 'd3';\n  import { sortConsistently } from '../utils/misc';\n  import { hovered as eHovered, selected as eSelected } from '../stores/eventSelections';\n  import { hovered as cHovered } from '../stores/centroidSelections';\n  import {\n    disinformantNationFilter,\n    selectAllFilters,\n    unselectAllFilters,\n    highlightPolarization,\n    sourcesSwitch,\n    centroidSwitch } from '../stores/filters';\n\n  import SourceLink from './SourceLink.svelte';\n  import Centroid from './Centroid.svelte';\n\n  export let timePoints;\n\n  let disNationNumberLeft = 0;\n  let disNationNumberRight = 0;\n\n  function handleMapClick() {\n    disinformantNationFilter.selectAll();\n  }\n\n  function handleBodyMouseover() {\n    $cHovered = null\n  }\n\n  function handleCentroidClick(event) {\n    const obj = event.detail;\n\n    if ($disinformantNationFilter.filter((d) => d.selected).length === $disinformantNationFilter.length) {\n      selectAllFilters();\n      disinformantNationFilter.selectOne(obj.id);\n    } else if ($disinformantNationFilter.filter((d) => d.selected).map((d) => d.id).includes(obj.id)) {\n      selectAllFilters();\n    } else {\n      selectAllFilters();\n      disinformantNationFilter.selectOne(obj.id);\n    }\n  }\n\n  function handleCentroidMouseover(event) {\n    $cHovered = event.detail;\n  }\n\n  $: countryNames = $countries.map((d) => d.properties.name);\n\n  $: sources = timePoints.map((d) => (\n    d.disinformantNation.map((disNation, i) => {\n      let coords = [];\n      let nativeCountry = false;\n\n      if (countryNames.includes(disNation)) {\n\n        if ($switchValueStore === 'on'){\n          coords = $geoPath.centroid($pangeaRegions.find((country) => country.properties.name === disNation));\n        }\n        else {\n          coords = $geoPath.centroid($countries.find((country) => country.properties.name === disNation));\n          if (disNation === 'North America') {\n            coords = [$geoPath.centroid($countries.find((country) => country.properties.name === 'Mexico'))[0],\n                    $geoPath.centroid($countries.find((country) => country.properties.name === 'Spain'))[1]];\n          }\n          if (disNation === 'Antarctica') {\n            coords[1] = coords[1] - 100\n          }\n        }\n\n\n\n        nativeCountry = true;\n      }\n\n      return {\n        ...d,\n        idNation: [d.id, i].join(''),\n        xCountry: coords[0],\n        yCountry: coords[1] + $panelHeight,\n        disNation: disNation,\n        nativeCountry: nativeCountry\n      };\n    })))\n    .flat()\n    .sort((a, b) => sortConsistently(a, b, 'disNation', '_x'))\n    .map((d, i , arr) => {\n      let shift = 0;\n      if (arr[i - 1] && arr[i - 1].disNation === d.disNation) {\n        shift = d.xCountry < d._x ? disNationNumberRight += 1 : disNationNumberLeft -= 1;\n      } else {\n        disNationNumberRight = disNationNumberLeft = 0;\n      }\n      return {\n        ...d,\n        shift\n      }\n    })\n    .map((d, _, arr) => {\n      const minDisNationShift = Math.min(...arr.filter((a) => a.disNation === d.disNation).map((a) => a.shift));\n      return {\n        ...d,\n        shift: d.shift <= 0 ? (-1 - (d.shift + Math.abs(minDisNationShift))) : d.shift\n      };\n    });\n\n  $: centroids = [...group(sources.filter(s => s.nativeCountry), (s) => s.disNation)];\n</script>\n\n<svelte:body on:mouseover={handleBodyMouseover} />\n\n<g class=\"centroids-sources\"class:hidden={$sourcesSwitch}>\n  {#each sources as source (source.idNation)}\n    <SourceLink {source} \n                selected={$eSelected && $eSelected.map((d) => d.id).includes(source.id)\n                            ? 'selected'\n                            : ($eSelected && $eSelected.length > 0\n                                ? 'background'\n                                : 'unselected')}\n                extraFaint={source.outOfTimeRange}\n                showPolarizationColor={$highlightPolarization} />\n  {/each}\n  {#each centroids as [country, centroid]}\n    <Centroid {centroid}\n              {country}\n              selected={$disinformantNationFilter.filter((d) => d.selected).map((d) => d.id).includes(country)}\n              on:click={handleCentroidClick}\n              on:mouseover={handleCentroidMouseover} />\n  {/each}\n</g>\n\n<style>\n    .hidden {\n    display: none;\n  }\n</style>\n",
    "<script>\n  // tooltip of the timeline spots\n  import { fade } from 'svelte/transition';\n\n  export let data;\n  export let x = 0;\n  export let y = 0;\n\n  const maxWidth = 450;\n  const margin = 10;\n\n  let width = maxWidth;\n  let left = 0;\n\n  $: {\n    if (x - width / 2 < 0) {\n      left = margin;\n    } else {\n      left = x - width / 2;\n    }\n\n    if (x + width - document.body.offsetWidth > 0) {\n      left = document.body.offsetWidth - width - margin;\n    }\n  }\n</script>\n\n<div class=\"spot-tooltip {data.name}\"\n     bind:clientWidth={width}\n     style=\"left: {left}px; top: {y - 20}px; width: {maxWidth}px;\"\n     in:fade={{duration: 200}}>\n  <div class=\"content\">\n    <p class=\"date\">\n      {data.date} - {data.endDate} Million Years Ago\n    </p>\n    <h2 class=\"name\">\n      {data.name}\n    </h2>\n    <div class=\"image\">\n      <img src=\"images/{data.name}.jpg\" alt=\"timeline era\" />\n    </div>\n    <p class=\" description\">\n      {data.description}\n    </p>\n  </div>\n</div>\n\n<style>\n  .spot-tooltip {\n    margin-right: 1rem;\n    position: absolute;\n    z-index: 1000000000;\n    text-align: center;\n  }\n\n  .content {\n    width: 100%;\n    height: 100%;\n    padding: 1rem;\n    font-family: var(--font-02);\n    color: var(--text-black);\n    background-color: var(--bg);\n    box-shadow: 0 1px 2px rgba(0,0,0,0.07), \n                0 2px 4px rgba(0,0,0,0.07), \n                0 4px 8px rgba(0,0,0,0.07), \n                0 8px 16px rgba(0,0,0,0.07),\n                0 16px 32px rgba(0,0,0,0.07), \n                0 32px 64px rgba(0,0,0,0.07);\n  }\n\n  .date {\n    font-size: 0.6rem;\n  }\n\n  h2 {\n    margin: 0.2rem 0;\n    font-size: 0.9rem;\n  }\n\n  .description {\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  .Cretaceous {\n    border: 2px solid var(--cretaceous);\n  }\n  .Jurassic {\n    border: 2px solid var(--jurassic);\n  }\n  .Triassic {\n    border: 2px solid var(--triassic);\n   }\n  .Paleogene {\n    border: 2px solid var(--paleogene);\n  }\n  .Neogene {\n    border: 2px solid var(--neogene);\n  }\n  .Permian {\n    border: 2px solid var(--permian);\n  }\n  .Carboniferous {\n    border: 2px solid var(--carboniferous);\n  }\n  \n\n</style>\n",
    "<script>\n  // the whole SVG wrapper\n  import { width, height, panelHeight } from '../stores/dimensions';\n  import { selected, hovered } from '../stores/eventSelections';\n  import Defs from './Defs.svelte';\n  import Brush from './Brush.svelte';\n  import Events from './Events.svelte';\n  import Sources from './Sources.svelte';\n  import Timeline from './Timeline.svelte';\n  import Legend from './Legend.svelte';\n  import Labels from './Labels.svelte';\n\n  export let timePoints;\n\n\n  function handleMouseover() {\n    $hovered = null\n  }\n\n  function handleClick(event) {\n    selected.reset();\n\n  }\n\n</script>\n\n<svg viewBox=\"0 0 {$width} {$height}\"\n     width={$width}\n     height={$height}\n     on:mouseover={handleMouseover}\n     on:click={handleClick}>\n  <Defs />\n \n  <rect x=\"0\" y=\"0\" width={$width} height={$panelHeight * 1.1}></rect>\n  <Sources {timePoints} />\n  <Events {timePoints} />\n  <Labels />\n  <Brush />\n\n  <Timeline />\n\n  <Legend />\n\n\n</svg>\n\n<style>\n  svg {\n    position: absolute;\n    z-index: 1000;\n  }\n\n  rect {\n    fill: url(#bg-gradient);\n  }\n</style>\n",
    "<script>\n    // based on suggestions from:\n    // Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\n    // On Designing and Building Toggle Switches by Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\n    // and this example by Scott O'hara https://codepen.io/scottohara/pen/zLZwNv \n\n\n    export let label;\n    export let design = 'inner label'\n    export let options = [];\n\texport let fontSize = 16;\n\texport let value = 'off';\n\n    let checked = false;\n\n\n\t\tconst uniqueID = Math.floor(Math.random() * 100)\n \n    function handleClick(event){\n        const target = event.target\n\n        const state = target.getAttribute('aria-checked')\n\n        checked = state === 'true' ? false : true\n\n        value = checked === true ? 'on' : 'off'\n\n\n        \n    }\n\t\n\t  const slugify = (str = \"\") =>\n    str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"\");\n\n</script>\n\n{#if design == 'inner'}\n<div class=\"s s--inner\">\n    <button\n        role=\"switch\"\n        aria-checked={checked}\n        aria-labelledby={`switch-${uniqueID}`}\n        on:click={handleClick}>\n            <span>on</span>\n            <span>off</span>\n    </button>\n    <span id={`switch-${uniqueID}`}>{label}</span>\n</div>\n{:else if design == 'slider'}\n<div class=\"s s--slider\" style=\"font-size:{fontSize}px\">\n    <span id={`switch-${uniqueID}`}>{label}</span>\n    <button\n        role=\"switch\"\n        aria-checked={checked}\n        aria-labelledby={`switch-${uniqueID}`}\n        on:click={handleClick}>\n    </button>\n</div>\n{:else}\n<div class=\"s s--multi\">\n    <div role='radiogroup'\n\t\t\t\t class=\"group-container\"\n\t\t\t\t aria-labelledby={`label-${uniqueID}`}\n\t\t\t\t style=\"font-size:{fontSize}px\" \n\t\t\t\t id={`group-${uniqueID}`}>\n    <div class='legend' id={`label-${uniqueID}`}>{label}</div>\n        {#each options as option}\n            <input type=\"radio\" id={`${option}-${uniqueID}`} value={option} bind:group={value}>\n            <label for={`${option}-${uniqueID}`}>\n                {option}\n            </label> \n        {/each}\n    </div>\n</div>\n\n{/if}\n\n<style>\n\t\t\t:root {\n\t\t--accent-color:var(--prehistoricGreen);\n\t\t--gray: #ccc;\n\t}\n    /* Inner Design Option */\n    .s--inner button {\n        background-color: #fff;\n        border: 1px solid var(--gray);\n    }\n    [role='switch'][aria-checked='true'] :first-child,\n    [role='switch'][aria-checked='false'] :last-child {\n        display: none;\n        color: #fff;\n    }\n\n    .s--inner button span {\n        user-select: none;\n        pointer-events:none;\n        padding: 0.25em;\n    }\n\n    .s--inner button:focus {\n        outline: var(--accent-color) solid 1px;\n    }\n\n    /* Slider Design Option */\n\n    .s--slider {\n        display: flex;\n        align-items: center;\n    }\n\n    .s--slider button {\n        width: 3em;\n        height: 1.6em;\n        position: relative;\n        margin: 0 0 0 0.5em;\n        background: var(--gray);\n        border: none;\n    }\n\n    .s--slider button::before {\n        content: '';\n        position: absolute;\n        width: 1.3em;\n        height: 1.3em;\n        background: #fff;\n        top: 0.13em;\n        right: 1.5em;\n        transition: transform 0.3s;\n    }\n\n    .s--slider button[aria-checked='true']{\n        background-color: var(--accent-color)\n    }\n\n    .s--slider button[aria-checked='true']::before{\n        transform: translateX(1.3em);\n        transition: transform 0.3s;\n    }\n\n    .s--slider button:focus {\n        box-shadow: 0 0px 0px 1px var(--accent-color);\n    }\n\n    /* Multi Design Option */\n\n    /* Based on suggestions from Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\n    and this example from Scott O'hara https://codepen.io/scottohara/pen/zLZwNv */\n\n    .s--multi .group-container {\n        border: none;\n        padding: 0;\n        white-space: nowrap;\n    }\n\n    /* .s--multi legend {\n    font-size: 2px;\n    opacity: 0;\n    position: absolute;\n    } */\n\n    .s--multi label {\n        display: inline-block;\n        line-height: 1.6;\n        position: relative;\n        z-index: 2;\n    }\n\n    .s--multi input {\n        opacity: 0;\n        position: absolute;\n    }\n\n    .s--multi label:first-of-type {\n        padding-right: 5em;\n    }\n\n    .s--multi label:last-child {\n        margin-left: -5em;\n        padding-left: 5em;\n    }\n\n    .s--multi:focus-within label:first-of-type:after {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n\n\n\n    /* making the switch UI.  */\n    .s--multi label:first-of-type:before,\n    .s--multi label:first-of-type:after {\n        content: \"\";\n        height: 1.25em;\n        overflow: hidden;\n        pointer-events: none;\n        position: absolute;\n        vertical-align: middle;\n    }\n\n    .s--multi label:first-of-type:before {\n        border-radius: 100%;\n        z-index: 2;\n        position: absolute;\n        width: 1.2em;\n        height: 1.2em;\n        background: #fff;\n        top: 0.2em;\n        right: 1.2em;\n        transition: transform 0.3s;\n    }\n\n    .s--multi label:first-of-type:after {\n        background: var(--accent-color);\n        border-radius: 1em;\n        margin: 0 1em;\n        transition: background .2s ease-in-out;\n        width: 3em;\n        height: 1.6em;\n    }\n\n    .s--multi input:first-of-type:checked ~ label:first-of-type:after {\n        background: var(--gray);\n    }\n\n    .s--multi input:first-of-type:checked ~ label:first-of-type:before {\n        transform: translateX(-1.4em);\n    }\n\n    .s--multi input:last-of-type:checked ~ label:last-of-type {\n        z-index: 1;\n    }\n\n    .s--multi input:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n\n    /* gravy */ \n\n    /* Inner Design Option */\n    [role='switch'][aria-checked='true'] :first-child,\n    [role='switch'][aria-checked='false'] :last-child {\n        border-radius: 0.25em;\n        background: var(--accent-color);\n        display: inline-block;\n    }\n\n    .s--inner button:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 0.1em;\n    }\n\n    /* Slider Design Option */\n    .s--slider button {\n        border-radius: 1.5em;\n    } \n    \n    .s--slider button::before {\n        border-radius: 100%;\n    }\n\n    .s--slider button:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n   \n\n</style>",
    "<script>\n  // the data table\n  import { sortConsistently } from '../utils/misc';\n  import { draggable } from '../actions/draggable';\n  import { selected } from '../stores/eventSelections';\n  import { columns as inputColumns} from '../inputs/table';\n\n  export let timePoints = [];\n\n  let columns = [...inputColumns];\n  let rows;\n\n  let searchString = '';\n\n  function getData(timePoints) {\n    resetSorters();\n    rows = [...timePoints].filter((d) => d.show);\n  }\n\n  function sortRows(property, direction) {\n    rows.sort((a, b) => direction * sortConsistently(a, b, property, 'id'));\n  }\n\n  function resetSorters() {\n    columns = columns.map((d) => ({...d, sorted: 'none'}));\n  }\n\n  function handleSorterClick(property) {\n    columns.forEach((d) => {\n      if (d.property !== property) d.sorted = 'none';\n    })\n    const column = columns.find((d) => d.property === property);\n    if (column.sorted === 'none') {\n      column.sorted = 'descending';\n      sortRows(property, -1);\n    } else if (column.sorted === 'descending') {\n      column.sorted = 'ascending';\n      sortRows(property, 1);\n    } else if (column.sorted === 'ascending') {\n      column.sorted = 'none';\n      getData(timePoints);\n    }\n    columns = columns;\n  }\n\n  function getSortedSelectedRows(ids) {\n    const arr = [];\n    ids.reverse().forEach((id) => {\n      arr.push(timePoints.find((d) => d.id === id));\n    });\n    return(arr);\n  }\n\n  function moveUp(ids) {\n    resetSorters();\n    if (ids.length > 0) {\n      rows = [...getSortedSelectedRows(ids), ...rows.filter((d) => !ids.includes(d.id))];\n    }\n  }\n\n  $: getData(timePoints);\n\n  $: if ($selected && timePoints) moveUp($selected.map((d) => d.id));\n</script>\n\n<div id=\"table\"\n     class=\"table-element\"\n     on:click|stopPropagation>\n  <div class=\"table-header\">\n    <a href=\"https://github.com/JeffRice/svelte-d3-prehistoric/tree/main/public\" target=\"_blank\">Download full dataset</a>\n  </div>\n  <div class=\"inner-table-wrapper\" use:draggable>\n    <table cellspacing=\"0\" cellpadding=\"0\">\n      <thead class=\"disable-select\">\n        <tr>\n          {#each columns as column (column.property)}\n            <th>\n              {column.name}\n              {#if (column.sortable)}\n                <svg viewBox=\"0 0 15 10\"\n                     width=\"12\"\n                     height=\"8\"\n                     class={column.sorted}\n                     on:click|stopPropagation={() => handleSorterClick(column.property)}>\n                  <path d=\"M0 0L15 0L7.5 10Z\"></path>\n                </svg>\n              {/if}\n            </th>\n          {/each}\n        </tr>\n      </thead>\n      <tbody on:mousedown|stopPropagation>\n        {#each rows.filter((d) => d.search.indexOf(searchString.toUpperCase()) > -1) as row, i (row.id)}\n          <tr class:darker={1 - (i % 2) === 0}\n              class:selected={$selected.map((d) => d.id).includes(row.id)}>\n            {#each columns as column (column.property)}\n              <td class={column.classes} style={column.minWidth ? `min-width: ${column.minWidth};`: ''}>\n                {#if (row[column.property] === undefined || row[column.property] === null)}\n                  {''}\n                {:else if (column.format)}\n                  {column.format(row[column.property])}\n                {:else if (column.hyperlink)}\n                  <a href={row[column.property]} target=\"_blank\">Link</a>\n                {:else}\n                  {row[column.property]}\n                {/if}\n              </td>\n            {/each}\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<style>\n  .table-element {\n    display: block;\n    width : 90%;\n    margin: 0 auto;\n    position: relative;\n  }\n  \n  .table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 1.7rem;\n    margin: 0.4rem 0;\n    padding: 0;\n    font-family: var(--font-02);\n    font-size: 0.8rem;\n  }\n\n  .inner-table-wrapper {\n    width: 100%;\n    height: 600px;\n    max-height: 70vh;\n    overflow-x: scroll;\n    border: 1px solid var(--prehistoricGreen);\n  }\n\n  .inner-table-wrapper::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  .inner-table-wrapper::-webkit-scrollbar:horizontal {\n    height: 7px;\n  }\n\n  .inner-table-wrapper::-webkit-scrollbar:vertical {\n    width: 7px;\n  }\n\n  .inner-table-wrapper::-webkit-scrollbar-thumb {\n    background-color:var(--prehistoricDarkGreen);\n  }\n\n  table {\n    width: 100%;\n    min-width: 100%;\n    font-family: var(--font-02);\n    color: var(--text-black);\n    border: none;\n    position: relative;\n  }\n\n  th, td {\n    padding: 0.2rem 0.4rem;\n  }\n\n  th {\n    font-size: 0.9rem;\n    text-align: left;\n    vertical-align: top;\n    background-color: var(--prehistoricGreen);\n    white-space: nowrap;\n    cursor: grab;\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 10000;\n  }\n\n  th svg {\n    margin-bottom: 0.05rem;\n    stroke: none;\n    fill: var(--text-black);\n    transition: transform 400ms ease;\n    cursor: pointer;\n  }\n\n  th svg.none {\n    transform: rotate(-90deg);\n  }\n\n  th svg.descending {\n    transform: rotate(360deg);\n  }\n\n  th svg.ascending {\n    transform: rotate(-540deg);\n  }\n\n  tbody {\n    width: 100%;\n  }\n\n  tr {\n    background-color: var(--bg);\n  }\n\n  tr.selected {\n    background-color: var(--prehistoricLightGreen);\n  }\n\n  td {\n    font-size: 0.8rem;\n    line-height: 1.5;\n    vertical-align: top;\n    position: relative;\n  }\n\n  .score-bar {\n    height: 0.7rem;\n    margin: auto 0;\n    background-color: var(--prehistoricLightGreen);\n    border: none;\n    border-radius: 3px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0.4rem;\n  }\n\n  .left {\n    text-align: left;\n  }\n\n  .right {\n    text-align: right;\n  }\n\n  .darker {\n    background-color: var(--dfrlab-lightlightgray);\n  }\n</style>\n",
    "<script>\n  // the timeline\n  import { width, maxDim, panelHeight } from '../stores/dimensions';\n  import { gentleLine } from '../utils/paths';\n\n  import TimelineSpots from './TimelineSpots.svelte';\n\n  const xOffset = $width / 70;\n  const yOffset = $maxDim / 900;\n</script>\n\n<g class=\"timeline\" transform=\"translate(0 {$panelHeight})\">\n  <path d={gentleLine($width, xOffset, yOffset)}></path>\n</g>\n<TimelineSpots />\n\n<style>\n  path {\n    stroke: none;\n    fill: url(#timeline-gradient);\n    fill-opacity: 1;\n  }\n</style>\n",
    "<script>\n  // selected dates on the timeline (= the spots)\n  import { panelHeight } from '../stores/dimensions';\n  import { timeScale } from '../stores/scales';\n  import { spottooltipable } from '../actions/spottooltipable';\n  import { drawWrapper } from '../stores/elements';\n  import { createTweenedPos } from '../transitions/tween';\n  import { originalTimeDomain } from '../stores/filters';\n\n  export let spot;\n\n  const x = createTweenedPos();\n  const x2 = createTweenedPos();\n\n\n  const lineLength = 35;\n  const offset = 5;\n  let yScaleText, mapScaleText, timeScaleText;\n  let spotName = spot.name\n  let displayName;\n  if (spotName === 'Neogene'){\n    displayName = 'Ng'\n  }\n  else {\n    displayName = spotName;\n  }\n\n  $: $x = $timeScale(spot.date);\n  $: $x2 = $timeScale(spot.endDate);\n\n\n  function testSetScale(e) {\n    console.log(e)\n    console.log(e.path[0].classList[0])\n    if (!$originalTimeDomain) $originalTimeDomain = [...$timeScale.domain()];\n    \n\n    if (e.path[0].classList[0] === 'Neogene'){\n      $timeScale.domain([2, 23])\n    }\n    if (e.path[0].classList[0] === 'Paleogene'){\n      $timeScale.domain([23, 65])\n    }\n    if (e.path[0].classList[0] === 'Cretaceous'){\n      $timeScale.domain([65, 145])\n    }\n    if (e.path[0].classList[0] === 'Jurassic'){\n      $timeScale.domain([145, 201])\n    }\n    if (e.path[0].classList[0] === 'Triassic'){\n      $timeScale.domain([201, 251])\n    }\n    if (e.path[0].classList[0] === 'Permian'){\n      $timeScale.domain([251, 298])\n    }\n    if (e.path[0].classList[0] === 'Carboniferous'){\n      $timeScale.domain([298, 358])\n    }\n\n\n\n\n\n$timeScale = $timeScale;\n//resetBrush();\n\n\n}\n\n\n\n\n\n</script>\n\n\n<g class=\"labels\">\n  <g class=\"time-scale\">\n<g class=\"spot time-scale-label\"\n    transform=\"translate({$x} -20)\"\n    on:click={testSetScale}\n    use:spottooltipable={{data: spot, target: $drawWrapper, top: $panelHeight + 20}}>\n\n\n            <rect x=\"0\" y =\"-20\" width=\"{$x2 - $x}\" height=\"40\" rx=\"5\" class=\"{spotName}\" />\n\n\n         <!--    <path d=\"M0 0l{lineLength} 0\"></path>   -->\n            <text class=\"bg\"\n                  dx={offset}\n                  dy=\"4\">{displayName} </text>\n            <text bind:this={timeScaleText}\n                  class=\"{spotName}\"\n                  on:click={testSetScale}\n                  dx={offset}\n                  dy=\"4\">{displayName} </text>\n <!--\n                  {#if (spot.name === 'Jurassic' || spot.name === 'Triassic'|| spot.name === 'Cretaceous') }\n            <path d=\"M{timeScaleText ? timeScaleText.getComputedTextLength() + 2.5 * offset: 0} 0l{lineLength} 0\"\n                  marker-end=\"url(#arrow)\"></path>\n                  {/if}\n\n  \n  <circle cx=\"0\" cy=\"0\" r=\"5\"></circle>\n  <circle class=\"bait\" cx=\"0\" cy=\"0\" r=\"10\"></circle>\n -->\n\n</g>\n</g>\n</g>\n\n<style>\n  g.spot {\n    pointer-events: all;\n    cursor: pointer;\n  }\n  \n  rect {\n    stroke: var(--dfrlab-gray);\n    stroke-width: 0.13rem;\n    stroke-opacity: 0.9;\n    transition: all 200ms ease;\n  }\n\n\n  .Cretaceous {\n    fill: var(--cretaceous);\n  }\n  .Jurassic {\n    fill: var(--jurassic);\n  }\n  .Triassic {\n    fill: var(--triassic);\n   }\n  .Paleogene {\n    fill:  var(--paleogene);\n  }\n  .Neogene {\n    fill:  var(--neogene);\n  }\n  .Permian {\n    fill:  var(--permian);\n  }\n  .Carboniferous {\n    fill:  var(--carboniferous);\n  }\n  \n  \n\n  rect.bait {\n    fill: none;\n    stroke: none;\n  }\n\n  .time-scale text {\n    fill: var(--text-darkgray);\n    font-family: var(--font-02);\n    font-size: 0.85rem;\n    text-anchor: middle;\n  }\n\n  .time-scale-label text {\n    text-anchor: start;\n  }\n\n</style>\n",
    "<script>\n  // back to top or to viz buttons\n  import { fly } from 'svelte/transition';\n  import { scrollTo } from '../utils/misc';\n\n  let show = false;\n\n  function handleScroll() {\n    if (window.pageYOffset - 500 > window.innerHeight) {\n      show = true;\n    } else {\n      show = false;\n    }\n  }\n\n  function handleSpanClick(id) {\n    scrollTo(id);\n  }\n</script>\n\n<svelte:window on:scroll={handleScroll}></svelte:window>\n\n{#if (show)}\n  <div class=\"to-top\" transition:fly={{duration: 400, y: 100}}>\n    <span class=\"pseudolink\" on:click={() => handleSpanClick('top')}>To Top</span>\n    <span class=\"pseudolink\" on:click={() => handleSpanClick('viz')}>To Visualization</span>\n  </div>\n{/if}\n\n<style>\n  .to-top {\n    padding: 0.7rem;\n    font-family: var(--font-02);\n    font-size: 0.9rem;\n    background-color: var(--transparentbg);\n    border-top: 2px solid var(--prehistoricDarkGreen);\n    border-left: 2px solid var(--prehistoricDarkGreen);\n    border-right: 2px solid var(--prehistoricDarkGreen);\n    border-top-left-radius: 3px;\n    border-top-right-radius: 3px;\n    position: fixed;\n    z-index: 1000001;\n    bottom: 0;\n    right: 1rem;\n  }\n\n  span {\n    display: block;\n    margin: 0.2rem auto;\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  // dynamic content placed above the visual\n  import {\n    disinformantNationFilter,\n    contextData,\n    sourceFilter,\n    attributionScoreFilter,\n    selectAllFilters,\n    highlightPolarization,\n    highlightCib } from '../stores/filters';\n  import { format, timeFormat } from 'd3';\n  import { drawWrapper } from '../stores/elements';\n  import { copytooltipable } from '../actions/copytooltipable';\n  import { scrollTo } from '../utils/misc';\n  import { fossilDatapoints } from '../stores/elements';\n\n  export let data = [];\n\n  const commaFormat = format(',');\n  const tf = timeFormat('%B %d, %Y');\n\n  function handleApplyFilter(id) {\n    selectAllFilters();\n    contextData.unselectAll();\n    $highlightPolarization = false;\n    $highlightCib = false;\n    switch (id) {\n      case 0:\n        disinformantNationFilter.selectOne('North America');\n        contextData.selectOne('corona');\n        break;\n      case 1:\n        sourceFilter.selectOne('Facebook');\n        $highlightCib = true;\n        break;\n      case 2:\n        $attributionScoreFilter = [$attributionScoreFilter[0], 6];\n        break;\n      case -1: break;\n    }\n    $drawWrapper.scrollIntoView({behavior: 'smooth'});\n  }\n</script>\n\n{#if (data.length > 0 && $fossilDatapoints)}\n  <section id=\"expand-content\" class=\"content transparent-bg no-upper-margin\" >\n    <input id=\"collapsible-status-quo\" class=\"toggle\" type=\"checkbox\">\n    <label for=\"collapsible-status-quo\" class=\"lbl-toggle top\">Overview</label>\n    <div class=\"collapsible-content\">\n      <p>\n        The Prehistoric Life Timeline Mapping is an interactive visualization about prehistoric creatures. They are mapped to their original geographic location and period in time they existed. It also maps fossils to their current era discovery sites.\n      </p>\n      <p>\n        The timeline visualization contains <em>{data.length} Prehistoric Creatures</em> that existed up to <em> 305 million years ago </em>\n      </p>\n      <p>\n        The mapped fossil datasets contain a total of <em>{$fossilDatapoints.originaljurassic.length + $fossilDatapoints.originalcretaceous.length + $fossilDatapoints.originaltriassic.length} Dinosaur fossils</em>:\n      </p>\n                                     <ul>\n                                      <li><em>{$fossilDatapoints.originalcretaceous.length} fossils</em> from the Cretaceous Period</li>\n                                      <li><em>{$fossilDatapoints.originaljurassic.length} fossils</em> from the Jurassic Period</li>\n                                      <li><em>{$fossilDatapoints.originaltriassic.length} and fossils</em> from the Triassic Period </li>\n                                     </ul>\n                                \n    </div>\n    <input id=\"collapsible-how-to\" class=\"toggle\" type=\"checkbox\">\n    <label for=\"collapsible-how-to\" class=\"lbl-toggle top\">How To Use This Tool</label>\n    <div class=\"collapsible-content\">\n\n      <p>\n        <em>Filters</em> enable users to adjust the visibility of creatures by <span class=\"pseudolink copy-tooltip\" use:copytooltipable={{content: 'The primary continent this creature lived. Although some may have lived in additional regions they are only mapped to one Continent.'}}>Continent</span>, <span class=\"pseudolink copy-tooltip\" use:copytooltipable={{content: 'The type of diet either herbivore or carinvore. Although it is believed there was a small amount of omnivorous prehistoric life those have not been included.'}}>Diet</span>, and <span class=\"pseudolink copy-tooltip\" use:copytooltipable={{content: 'The geologic time period they belond to. Again although some may have stretched into multiple time periods, so they\\'re given a time range that shows dates they may have lived'}}>Time Period</span>. Free text search is also supported.\n      </p>\n      <p>\n        <em>Timeline View</em> ordered chronologically from left to right. By clicking and dragging just below the timeline, users can filter their view to a particular date range. Or by clicking on the colored time period tabs they can select that periods time rage. Return to the default view by clicking \"Reset time scale\" on the left-hand side of the timeline. \n        <br /><img class=\"image\" src=\"images/brushable.jpg\" alt=\"using the timeline brush\"  />\n        <br /><img class=\"image\" src=\"images/selectlabel.jpg\" alt=\"selecting a time period label\" />\n      </p>\n      <p>\n        <em>Map View</em> shows a Mercator projection of the Earth. There is a current map as well as an overlay of pangea avaialable via the control panel. The source Continent of each Creature is connected by the curved lines: the more lines a particular region has originating from it, shows more creatures mapped to that location. These sources and continent mappings can be hidden via the \"Toggle Sources\" checkbox in the controls. By hovering over a particular Continent, users can see a density plot of creatures over time, as well as breakdowns of the creatures diets and time periods. Each of these can be auto-filtered together with the selected country. \n      </p>\n      <p>\n        <em>Fossil Datapoints</em> are a collection of fossils related to dinosaurs or entire time periods. Large screens are automatically populated with all fossil data. Smaller screens are left blank. To control these fossil points select a time period from the dropdowns or select an individual dinosaur from the details section.\n        <br /><img class=\"image\" src=\"images/fossildata.jpg\" alt=\"using the fossil dropdown\" />\n      </p>\n      <p>\n        <em>Size + Weight Distribution</em> is a scatterplot charting the size and weight of each creature. They are broken into smaller size categories you can navigate between using the radio buttons below the chart.\n      </p>\n      <p>\n        <em>Dataset View</em> presents a simplified spreadsheet view of the prehistoric dataset. Creatures are affected by all applied filters. By clicking on one or more creatures in the Timeline View, users can \"pin\" them to the top of the Dataset View for easy comparison. The <a href=\"https://github.com/JeffRice/svelte-d3-prehistoric/tree/main/public\">full dataset</a> can also be downloaded. \n      </p>\n    </div>\n\n    <ul class=\"filter-list\">\n      <li on:click|self={() => document.querySelector('#viz').scrollIntoView({behavior: 'auto'})}>Visualization</li>\n      <li on:click|self={() => document.querySelector('.fossil-wrapper').scrollIntoView({behavior: 'auto'})}>Fossil Details</li>\n      <li on:click|self={() => document.querySelector('.chart-wrapper').scrollIntoView({behavior: 'auto'})}>Size + Weight Chart</li>\n      <li on:click|self={() => document.querySelector('#table').scrollIntoView({behavior: 'auto'})}>Table</li>\n      <li on:click|self={() => document.querySelector('.about').scrollIntoView({behavior: 'auto'})}>About</li>\n    </ul>\n    <!-- <p>\n      Or just explore the full tool <span class=\"pseudolink\" on:click={() => handleApplyFilter(-1)}>below</span>. \n    </p> -->\n  </section>\n{/if}\n\n<style>\n  .image {\n    max-width: 100%;\n  }\n</style>\n",
    "<script>\n  // the visualization wrapper\n  // also holds the logic for the force-directed graph simulation\n  // also holds filter=>event logic\n  // also holds base data loading logic\n  import { onMount } from 'svelte';\n  import loadData from '../utils/loadData';\n  import loadMapData from '../utils/loadMapData';\n  import loadPangeaData from '../utils/loadPangeaData';\n  import { setScales } from '../utils/scales';\n  import {\n    width,\n    height,\n    panelHeight,\n    minDim,\n    maxDim,\n    margin,\n    controlsHeight } from '../stores/dimensions';\n  import {\n    timeScale,\n    sizeTotalYScale,\n    sizeTotalRScale,\n    } from '../stores/scales';\n  import {\n    disinformantNationFilter,\n    platformFilter,\n    timeperiodFilter,\n    sourceFilter,\n    dietFilter,\n    textSearchFilter,\n    originalTimeDomain,\n    contextData,\n    tagFilter\n  } from '../stores/filters';\n  import {\n    haveOverlap,\n    includesTextSearch,\n    preloadImages } from '../utils/misc';\n  import { selected } from '../stores/eventSelections';\n  import { drawWrapper, fossilDatapoints } from '../stores/elements';\n  \n  import { uniq } from 'lodash';\n  import {\n    extent,\n    forceSimulation,\n    forceX,\n    forceY,\n    forceManyBody,\n    forceCenter,\n    forceCollide,\n    timeFormat } from 'd3';\n  import { sortConsistently } from '../utils/misc';\n  import { parseUrl } from '../utils/share';\n\n  import ToTop from './ToTop.svelte';\n  import TopVisualContent from './TopVisualContent.svelte';\n  import LoadingInfo from './LoadingInfo.svelte';\n  import Controls from './Controls.svelte';\n  import Svg from './Svg.svelte';\n  import Canvas from './Canvas.svelte';\n  import Info from './Info.svelte';\n  import EventTooltip from './EventTooltip.svelte';\n  import CentroidTooltip from './CentroidTooltip.svelte';\n  import Table from './Table.svelte';\n  import FossilDetails from './FossilDetails.svelte';\n  import ChartWrapper from './ChartWrapper.svelte';\n\n\n  const tf = timeFormat('%B %d, %Y');\n  const observeDays = 3;\n\n  let data, timePoints;\n\n  onMount(async () => {\n    // load the dataset and add runtime variables\n    data = (await loadData())\n            .map((d) => ({\n              ...d,\n              recentlyAdded: Math.ceil(((new Date()) - d.timestamp) / (1000 * 60 * 60 * 24)) <= observeDays,\n              search: [d.name, d.timePeriod, d.disinformantNation, d.tooltipContent, d.type, d.diet].flat().join('__').toLowerCase(),\n              show: false\n            }));\n\n    // load the map data\n    loadMapData();\n    loadPangeaData();\n\n    // setup filters\n    disinformantNationFilter.init(data, 'disinformantNation');\n    platformFilter.init(data, 'platforms');\n    timeperiodFilter.init(data, 'periodEra');\n    sourceFilter.init(data, 'sourceFilter');\n    dietFilter.init(data, 'diet');\n    tagFilter.init(data, 'tags');\n    preloadImages(data);\n\n    // apply filters from URL\n    if (window.location.hash.length > 1) {\n      const urlFilters = parseUrl(window.location.hash);\n      disinformantNationFilter.applyBoolArray(urlFilters.disinformantNations);\n      platformFilter.applyBoolArray(urlFilters.platforms);\n      timeperiodFilter.applyBoolArray(urlFilters.methods);\n      sourceFilter.applyBoolArray(urlFilters.sources);\n      dietFilter.applyBoolArray(urlFilters.diet);\n      tagFilter.applyBoolArray(urlFilters.tags);\n      contextData.applyBoolArray(urlFilters.contextData);\n      $textSearchFilter = urlFilters.textSearch;\n    } \n  });\n\n  // set the scales\n  $: setScales(data, $width, $minDim, $maxDim, $panelHeight, $margin);\n\n  $: if (data) {\n    // calculate scaled data points\n    const scaledData = data.map((d) => {\n      return {\n        ...d,\n        _x: $timeScale(d.testDate),\n        _y: $sizeTotalYScale.range()[0],\n      //  color: $attributionScoreScale(d.attributionScore),\n        size: d.size,\n        rSizeTot: isNaN(d.size) || d.size === 0 ? $sizeTotalRScale.range()[0] : $sizeTotalRScale(d.size),\n        fy:  $sizeTotalYScale(Math.max(d.sizeTotal, 6)),\n      };\n\n    })\n    .sort((a, b) => sortConsistently(a, b, 'size', 'id'));\n\n   // console.log('scaled data: ', scaledData)\n\n    // for some reason these definitions need to be in here and not in a gobal scope or module\n    const simulation = forceSimulation()\n      .force('x', forceX().x(d => d._x));\n\n    const simulationCharge = forceSimulation()\n      .force('x', forceX().x(d => d._x))\n     .force('collide', forceCollide().strength(1).radius( (d) => $sizeTotalRScale(d.size) * 1  ) );\n //  .force('charge', forceManyBody().strength((d) => -($sizeTotalRScale(d.size) + 10) * 10).distanceMax(500).distanceMin(50));\n    simulation\n      .nodes(scaledData)\n      .alpha(0.8)\n      .tick(300);\n    // finally set the global timePoints variable\n    simulationCharge\n      .nodes(scaledData) \n      .alpha(0.8)\n      .tick(300)\n      .on('end', () => {\n        timePoints = scaledData.map((d) => ({\n          ...d,\n          x: $originalTimeDomain\n              ? d.x \n              : Math.max(\n                  $margin.left - Math.random() * $margin.left / 4, \n                  Math.min($width - $margin.right + (Math.random() + 2) * $margin.right / 4, d.x)\n                )\n        }));\n    });\n  }\n\n  // translate filter values into show property state\n  $: if (timePoints) {\n      timePoints = timePoints.map((d) => ({\n        ...d,\n        show: haveOverlap($disinformantNationFilter, d.disinformantNation)\n              && haveOverlap($timeperiodFilter, d.periodEra)\n              && haveOverlap($dietFilter, d.diet)\n              && includesTextSearch($textSearchFilter, d.search)\n      }));\n    }\n</script>\n\n<ToTop />\n<TopVisualContent {data} />\n<div id=\"viz\" class=\"visualization-wrapper\" bind:clientWidth={$width}>\n  {#if (!timePoints)}\n    <LoadingInfo />\n  {/if}\n  <div class=\"sticky-wrapper\">\n    <div class=\"controls-wrapper\" bind:clientHeight={$controlsHeight}>\n      <Controls {timePoints} />\n    </div>\n    <div class=\"draw-wrapper\" bind:this={$drawWrapper} bind:clientHeight={$height}>\n      {#if (timePoints)}\n        <Svg {timePoints} />\n        <Canvas />\n        <Info selectedItems={$selected}\n              x={2 * $timeScale.range()[0]}\n              y={$sizeTotalYScale.range()[1]} />\n        <EventTooltip />\n        <CentroidTooltip />\n      {/if}\n    </div>\n  </div>\n    {#if ($fossilDatapoints)}\n      <div class=\"fossil-wrapper\">\n        <FossilDetails />\n      </div>\n    {/if}\n    <div class=\"chart-wrapper\">\n      <ChartWrapper />\n    </div>\n    \n  <div class=\"table-wrapper\">\n    <Table {timePoints} />\n  </div>\n  <div>\n\n  </div>\n</div>\n\n<style>\n  .visualization-wrapper {\n    width: 100%;\n    position: relative;\n  }\n\n  .controls-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0 0.5rem 0.5rem 0.5rem;\n    position: relative;\n    pointer-events: none;\n  }\n\n  .sticky-wrapper {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 180vmin;\n    min-height: 1200px;\n    max-height: 100vmax;\n    margin: 0 0 0 0;\n    position: relative;\n  }\n\n  .draw-wrapper {\n    flex: 1;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n\n  @media (min-width: 1350px) {\n    .controls-wrapper {\n      position: sticky;\n      top: 0px;\n      z-index: 2000;\n    }\n\n    .draw-wrapper {\n      position: absolute;\n      top: 0;\n      z-index: 0;\n    } \n  }\n\n  .table-wrapper {\n    width: 100%;\n    margin: 2rem 0;\n    padding: 0.2rem 1rem;\n  }\n\n  .chart-wrapper {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}